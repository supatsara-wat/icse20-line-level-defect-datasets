File,LineNumber,src
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer.java,132,    stoptable = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer.java,141,"    this(matchVersion, StopFilter.makeStopSet( stopwords ));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer.java,173,"    result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer.java,174,"                             result, stoptable );"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer.java,203,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer.java,204,"                                      streams.result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,90,"        .unmodifiableSet(new CharArraySet(Arrays.asList(BRAZILIAN_STOP_WORDS),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,91,            false));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,123,    stoptable = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,139,        .copy(stemExclusionSet));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,147,"    this(matchVersion, StopFilter.makeStopSet(stopwords));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,172,  excltable = StopFilter.makeStopSet( exclusionlist );
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,204,"  result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,205,"                                         result, stoptable );"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,232,"        streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java,233,"                                        streams.result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java,71,"        .unmodifiableSet(new CharArraySet(Arrays.asList(STOP_WORDS),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java,98,    stopTable = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java,109,    stopTable = StopFilter.makeStopSet(stopWords);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java,125,"    return new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java,126,"                          new CJKTokenizer(reader), stopTable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java,150,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java,151,"                                      streams.source, stopTable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java,66,"        stopTable = new CharArraySet(Arrays.asList(STOP_WORDS), false);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,23,import java.util.Iterator;
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,39, * Base class for decomposition token filters.
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,58,  protected final LinkedList tokens;
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,72,
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,74,"    this(input,makeDictionary(dictionary),minWordSize,minSubwordSize,maxSubwordSize, onlyLongestMatch);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,78,"    this(input,makeDictionary(dictionary),DEFAULT_MIN_WORD_SIZE,DEFAULT_MIN_SUBWORD_SIZE,DEFAULT_MAX_SUBWORD_SIZE, onlyLongestMatch);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,81,"  protected CompoundWordTokenFilterBase(TokenStream input, Set dictionary, boolean onlyLongestMatch) {"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,82,"    this(input,dictionary,DEFAULT_MIN_WORD_SIZE,DEFAULT_MIN_SUBWORD_SIZE,DEFAULT_MAX_SUBWORD_SIZE, onlyLongestMatch);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,85,"  protected CompoundWordTokenFilterBase(TokenStream input, String[] dictionary) {"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,86,"    this(input,makeDictionary(dictionary),DEFAULT_MIN_WORD_SIZE,DEFAULT_MIN_SUBWORD_SIZE,DEFAULT_MAX_SUBWORD_SIZE, false);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,89,"  protected CompoundWordTokenFilterBase(TokenStream input, Set dictionary) {"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,90,"    this(input,dictionary,DEFAULT_MIN_WORD_SIZE,DEFAULT_MIN_SUBWORD_SIZE,DEFAULT_MAX_SUBWORD_SIZE, false);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,93,"  protected CompoundWordTokenFilterBase(TokenStream input, Set dictionary, int minWordSize, int minSubwordSize, int maxSubwordSize, boolean onlyLongestMatch) {"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,96,    this.tokens=new LinkedList();
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,105,"      this.dictionary = new CharArraySet(dictionary.size(), false);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,124,  public static final Set makeDictionary(final String[] dictionary) {
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,126,"    CharArraySet dict = new CharArraySet(dictionary.length, false);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,143,      setToken((Token)tokens.removeFirst());
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,147,    if (input.incrementToken() == false)
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,161,      setToken((Token)tokens.removeFirst());
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,168,"  protected static final void addAllLowerCase(Set target, Collection col) {"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,169,    Iterator iter=col.iterator();
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,170,
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,171,    while (iter.hasNext()) {
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase.java,172,      target.add(((String)iter.next()).toLowerCase());
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,47,"    super(input, dictionary, minWordSize, minSubwordSize, maxSubwordSize, onlyLongestMatch);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,51,   *
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,56,"    super(input, dictionary);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,60,   *
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,63,   *        lower case strings.
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,66,"    super(input, dictionary);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,70,   *
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/DictionaryCompoundWordTokenFilter.java,81,"    super(input, dictionary, minWordSize, minSubwordSize, maxSubwordSize, onlyLongestMatch);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter.java,60,"    this(input, hyphenator, makeDictionary(dictionary), minWordSize,"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter.java,65,   *
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter.java,72,"    this(input, hyphenator, makeDictionary(dictionary), DEFAULT_MIN_WORD_SIZE,"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter.java,77,   *
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter.java,85,"    this(input, hyphenator, dictionary, DEFAULT_MIN_WORD_SIZE,"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter.java,90,   *
contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter.java,105,"    super(input, dictionary, minWordSize, minSubwordSize, maxSubwordSize,"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java,95,"       Arrays.asList(CZECH_STOP_WORDS), false));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java,124,    this.stoptable = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java,137,"    this(matchVersion, StopFilter.makeStopSet( stopwords ));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java,209,"  result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java,210,"                                         result, stoptable );"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java,239,"        streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java,240,"                                        streams.result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,86,"        Arrays.asList(GERMAN_STOP_WORDS), false));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,134,    stopSet = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,135,    exclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(stemExclusionSet));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,145,"    this(matchVersion, StopFilter.makeStopSet(stopwords));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,170,    exclusionSet = StopFilter.makeStopSet(exclusionlist);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,178,  public void setStemExclusionTable(Map exclusionlist) {
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,179,    exclusionSet = new HashSet(exclusionlist.keySet());
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,204,"    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,205,"                            result, stopSet);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,238,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanAnalyzer.java,239,"                                      streams.result, stopSet);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java,73,"          Arrays.asList(GREEK_STOP_WORDS), false));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java,96,      stopSet = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java,107,"      this(matchVersion, StopFilter.makeStopSet(stopwords));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java,130,"        result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java,131,"                                result, stopSet);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java,155,"        streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java,156,"                                        streams.result, stopSet);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java,129,    stoptable = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java,138,"    this(matchVersion, StopFilter.makeStopSet(stopwords));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java,178,"    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java,179,"                            result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java,212,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java,213,"                                      streams.result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,38,  private CharArraySet articles = null;
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,39,  private TermAttribute termAtt;
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,41,"  private static char[] apostrophes = {'\'', '’'};"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,44,    if (articles instanceof CharArraySet)
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,45,      this.articles = (CharArraySet) articles;
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,46,    else
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,47,"      this.articles = new CharArraySet(articles, true);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,54,    super(input);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,55,    this.articles = new CharArraySet(Arrays.asList(
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,56,"        ""l"", ""m"", ""t"", ""qu"", ""n"", ""s"", ""j""), true);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,57,    termAtt = addAttribute(TermAttribute.class);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,65,    setArticles(articles);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,73,    super(input);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,74,"    this.articles = new CharArraySet(Arrays.asList(articles), true);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java,75,    termAtt = addAttribute(TermAttribute.class);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,101,  private Set<?> excltable = new HashSet();
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,115,"        .unmodifiableSet(new CharArraySet(Arrays.asList(FRENCH_STOP_WORDS),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,151,    this.stoptable = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,153,        .copy(stemExclutionSet));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,162,"    this(matchVersion, StopFilter.makeStopSet(stopwords));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,179,    excltable = StopFilter.makeStopSet(exclusionlist);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,187,  public void setStemExclusionTable(Map exclusionlist) {
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,188,    excltable = new HashSet(exclusionlist.keySet());
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,198,    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,214,"    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,215,"                            result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,243,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java,244,"                                      streams.result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.java,76,    CharArraySet.unmodifiableSet(new CharArraySet(Arrays.asList(
contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.java,156,   *            {@link StopFilter#makeStopSet(String[])}and/or
contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.java,202,"      if (stopWords != null) stream = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion), stream, stopWords);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.java,390,    private final Set stopWords;
contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.java,395,"    public FastStringTokenizer(String str, boolean isLetter, boolean toLowerCase, Set stopWords) {"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,83,"        .unmodifiableSet(new CharArraySet(Arrays.asList(DUTCH_STOP_WORDS),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,84,            false));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,119,    stoptable = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,120,    excltable = CharArraySet.unmodifiableSet(CharArraySet.copy(stemExclusionTable));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,133,"    this(matchVersion, StopFilter.makeStopSet(stopwords));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,171,    excltable = StopFilter.makeStopSet(exclusionlist);
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,225,"    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,226,"                            result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,259,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java,260,"                                      streams.result, stoptable);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer.java,182,"      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer.java,183,"                              result, stopWords);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer.java,226,"        streams.withStopFilter = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer.java,227,"                                                streams.wrapped, stopWords);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer.java,248,"          streams.withStopFilter = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer.java,249,"                                                  streams.wrapped, stopWords);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,62,"          .unmodifiableSet(new CharArraySet(Arrays.asList(RUSSIAN_STOP_WORDS),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,63,              false));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,82,"      this(matchVersion, StopFilter.makeStopSet(stopwords));"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,94,      stopSet = CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,122,"        result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,123,"                                result, stopSet);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,150,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianAnalyzer.java,151,"                                      streams.result, stopSet);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java,51,"    ts = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java,52,"                        ts, StopAnalyzer.ENGLISH_STOP_WORDS_SET);"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java,76,"      streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java,77,"                                      streams.result, StopAnalyzer.ENGLISH_STOP_WORDS_SET);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestElision.java,45,"    TokenFilter filter = new ElisionFilter(tokenizer, articles);"
contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer.java,156,"      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer.java,157,"                              result, stopWords, false);"
contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer.java,178,"        streams.filteredTokenStream = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer.java,179,"                                                     streams.filteredTokenStream, stopWords, false);"
contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.java,1079,"        new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(""the"", ""foo"" )));"
contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.java,1102,"        new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(""the"", ""in"", ""are"", ""this"" )));"
contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQueryParserWrapper.java,1059,"    QueryParserWrapper qp = new QueryParserWrapper(""a"", new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(""the"", ""foo"")));"
contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQueryParserWrapper.java,1078,"    QueryParserWrapper qp = new QueryParserWrapper(""a"", new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(""the"", ""in"", ""are"", ""this"")));"
contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer.java,53,    stopSet = StopFilter.makeStopSet(stopWords);
contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer.java,65,"      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer.java,96,"        streams.result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),"
src/java/org/apache/lucene/analysis/CharArraySet.java,41, * buffer. The same behaviour have the {@code contains()} methods.
src/java/org/apache/lucene/analysis/CharArraySet.java,45,
src/java/org/apache/lucene/analysis/CharArraySet.java,51,"  public static final CharArraySet EMPTY_SET = CharArraySet.unmodifiableSet(new CharArraySet(0, false));"
src/java/org/apache/lucene/analysis/CharArraySet.java,53,  /** Create set with enough capacity to hold startSize
src/java/org/apache/lucene/analysis/CharArraySet.java,54,   *  terms */
src/java/org/apache/lucene/analysis/CharArraySet.java,55,"  public CharArraySet(int startSize, boolean ignoreCase) {"
src/java/org/apache/lucene/analysis/CharArraySet.java,63,  /** Create set from a Collection of char[] or String */
src/java/org/apache/lucene/analysis/CharArraySet.java,65,"    this(c.size(), ignoreCase);"
src/java/org/apache/lucene/analysis/CharArraySet.java,70,"  private CharArraySet(char[][] entries, boolean ignoreCase, int count){"
src/java/org/apache/lucene/analysis/CharArraySet.java,134,      for(int i=0;i<text.length;i++)
src/java/org/apache/lucene/analysis/CharArraySet.java,135,        text[i] = Character.toLowerCase(text[i]);
src/java/org/apache/lucene/analysis/CharArraySet.java,152,      for(int i=0;i<len;i++) {
src/java/org/apache/lucene/analysis/CharArraySet.java,153,        if (Character.toLowerCase(text1[off+i]) != text2[i])
src/java/org/apache/lucene/analysis/CharArraySet.java,170,      for(int i=0;i<len;i++) {
src/java/org/apache/lucene/analysis/CharArraySet.java,171,        if (Character.toLowerCase(text1.charAt(i)) != text2[i])
src/java/org/apache/lucene/analysis/CharArraySet.java,201,      for (int i=offset; i<stop; i++) {
src/java/org/apache/lucene/analysis/CharArraySet.java,202,        code = code*31 + Character.toLowerCase(text[i]);
src/java/org/apache/lucene/analysis/CharArraySet.java,216,      for (int i=0; i<len; i++) {
src/java/org/apache/lucene/analysis/CharArraySet.java,217,        code = code*31 + Character.toLowerCase(text.charAt(i));
src/java/org/apache/lucene/analysis/CharArraySet.java,277,"    return new UnmodifiableCharArraySet(set.entries, set.ignoreCase, set.count);"
src/java/org/apache/lucene/analysis/CharArraySet.java,297,"    return new CharArraySet(set, ignoreCase);"
src/java/org/apache/lucene/analysis/CharArraySet.java,359,"    private UnmodifiableCharArraySet(char[][] entries, boolean ignoreCase,"
src/java/org/apache/lucene/analysis/CharArraySet.java,361,"      super(entries, ignoreCase, count);"
src/java/org/apache/lucene/analysis/StopAnalyzer.java,41,  private final boolean enablePositionIncrements;
src/java/org/apache/lucene/analysis/StopAnalyzer.java,55,"    final CharArraySet stopSet = new CharArraySet(stopWords.size(), false);"
src/java/org/apache/lucene/analysis/StopAnalyzer.java,66,    enablePositionIncrements = StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion);
src/java/org/apache/lucene/analysis/StopAnalyzer.java,74,    enablePositionIncrements = StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion);
src/java/org/apache/lucene/analysis/StopAnalyzer.java,83,    this.enablePositionIncrements = StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion);
src/java/org/apache/lucene/analysis/StopAnalyzer.java,92,    this.enablePositionIncrements = StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion);
src/java/org/apache/lucene/analysis/StopAnalyzer.java,98,"    return new StopFilter(enablePositionIncrements, new LowerCaseTokenizer(reader), stopWords);"
src/java/org/apache/lucene/analysis/StopAnalyzer.java,112,"      streams.result = new StopFilter(enablePositionIncrements, streams.source, stopWords);"
src/java/org/apache/lucene/analysis/StopFilter.java,33,
src/java/org/apache/lucene/analysis/StopFilter.java,61,    if (stopWords instanceof CharArraySet) {
src/java/org/apache/lucene/analysis/StopFilter.java,62,      this.stopWords = (CharArraySet)stopWords;
src/java/org/apache/lucene/analysis/StopFilter.java,63,    } else {
src/java/org/apache/lucene/analysis/StopFilter.java,64,"      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);"
src/java/org/apache/lucene/analysis/StopFilter.java,65,      this.stopWords.addAll(stopWords);
src/java/org/apache/lucene/analysis/StopFilter.java,66,    }
src/java/org/apache/lucene/analysis/StopFilter.java,79,   * @see #makeStopSet(java.lang.String[])
src/java/org/apache/lucene/analysis/StopFilter.java,82,"    this(enablePositionIncrements, in, stopWords, false);"
src/java/org/apache/lucene/analysis/StopFilter.java,91,"   * @see #makeStopSet(java.lang.String[], boolean) passing false to ignoreCase"
src/java/org/apache/lucene/analysis/StopFilter.java,94,"    return makeStopSet(stopWords, false);"
src/java/org/apache/lucene/analysis/StopFilter.java,104,"   * @see #makeStopSet(java.lang.String[], boolean) passing false to ignoreCase"
src/java/org/apache/lucene/analysis/StopFilter.java,107,"    return makeStopSet(stopWords, false);"
src/java/org/apache/lucene/analysis/StopFilter.java,116,"  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {"
src/java/org/apache/lucene/analysis/StopFilter.java,117,"    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);"
src/java/org/apache/lucene/analysis/StopFilter.java,121,
src/java/org/apache/lucene/analysis/StopFilter.java,123,   *
src/java/org/apache/lucene/analysis/StopFilter.java,129,"    CharArraySet stopSet = new CharArraySet(stopWords.size(), ignoreCase);"
src/java/org/apache/lucene/analysis/StopFilter.java,166,   * @see #setEnablePositionIncrements(boolean).
src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java,50,"  private final boolean replaceInvalidAcronym,enableStopPositionIncrements;"
src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java,73,    enableStopPositionIncrements = StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion);
src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java,104,"    result = new StopFilter(enableStopPositionIncrements, result, stopSet);"
src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java,151,"      streams.filteredTokenStream = new StopFilter(enableStopPositionIncrements,"
src/java/org/apache/lucene/analysis/standard/StandardAnalyzer.java,152,"                                                   streams.filteredTokenStream, stopSet);"
src/java/org/apache/lucene/util/CharacterUtils.java,38,  public static CharacterUtils getInstance(Version matchVersion) {
src/java/org/apache/lucene/util/CharacterUtils.java,61,"  public abstract int codePointAt(char[] chars, int offset);"
src/java/org/apache/lucene/util/CharacterUtils.java,82,"  public abstract int codePointAt(CharSequence seq, int offset);"
src/java/org/apache/lucene/util/CharacterUtils.java,89,"    public final int codePointAt(char[] chars, int offset) {"
src/java/org/apache/lucene/util/CharacterUtils.java,94,"    public int codePointAt(CharSequence seq, int offset) {"
src/java/org/apache/lucene/util/CharacterUtils.java,104,"    public final int codePointAt(char[] chars, int offset) {"
src/java/org/apache/lucene/util/CharacterUtils.java,109,"    public int codePointAt(CharSequence seq, int offset) {"
src/test/org/apache/lucene/analysis/TestCharArraySet.java,36,"    CharArraySet cas = new CharArraySet(0, true);"
src/test/org/apache/lucene/analysis/TestCharArraySet.java,47,"    CharArraySet set=new CharArraySet(10,true);"
src/test/org/apache/lucene/analysis/TestCharArraySet.java,59,"    CharArraySet set = new CharArraySet(10, true);"
src/test/org/apache/lucene/analysis/TestCharArraySet.java,71,"    CharArraySet set=new CharArraySet(10,true);"
src/test/org/apache/lucene/analysis/TestCharArraySet.java,84,"    CharArraySet set=new CharArraySet(10,true);"
src/test/org/apache/lucene/analysis/TestCharArraySet.java,165,"    CharArraySet set=new CharArraySet(10,true);"
src/test/org/apache/lucene/analysis/TestStopFilter.java,40,"    TokenStream stream = new StopFilter(false, new WhitespaceTokenizer(reader), stopWords, false);"
src/test/org/apache/lucene/analysis/TestStopFilter.java,52,"    TokenStream stream = new StopFilter(false, new WhitespaceTokenizer(reader), stopWords, true);"
src/test/org/apache/lucene/analysis/TestStopFilter.java,62,    Set stopSet = StopFilter.makeStopSet(stopWords);
src/test/org/apache/lucene/analysis/TestStopFilter.java,63,"    TokenStream stream = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);"
src/test/org/apache/lucene/analysis/TestStopFilter.java,86,    Set stopSet = StopFilter.makeStopSet(stopWords);
src/test/org/apache/lucene/analysis/TestStopFilter.java,89,"    StopFilter stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);"
src/test/org/apache/lucene/analysis/TestStopFilter.java,93,"    stpf = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);"
src/test/org/apache/lucene/analysis/TestStopFilter.java,109,    Set stopSet0 = StopFilter.makeStopSet(stopWords0);
src/test/org/apache/lucene/analysis/TestStopFilter.java,110,    Set stopSet1 = StopFilter.makeStopSet(stopWords1);
src/test/org/apache/lucene/analysis/TestStopFilter.java,112,"    StopFilter stpf0 = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet0); // first part of the set"
src/test/org/apache/lucene/analysis/TestStopFilter.java,114,"    StopFilter stpf01 = new StopFilter(false, stpf0, stopSet1); // two stop filters concatenated!"
src/test/org/apache/lucene/queryParser/TestQueryParser.java,959,"    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, ""a"", new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(""the"", ""foo"")));"
src/test/org/apache/lucene/queryParser/TestQueryParser.java,975,"    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, ""a"", new StopAnalyzer(Version.LUCENE_CURRENT, StopFilter.makeStopSet(""the"", ""in"", ""are"", ""this"")));"
src/test/org/apache/lucene/search/TestPositionIncrement.java,25,import java.util.Iterator;
src/test/org/apache/lucene/search/TestPositionIncrement.java,235,"      return new StopFilter(enablePositionIncrements, ts, new CharArraySet(Collections.singleton(""stop""), true));"
src/test/org/apache/lucene/search/TestPositionIncrement.java,278,      Collection payloads = pspans.getPayload();
src/test/org/apache/lucene/search/TestPositionIncrement.java,280,      for (Iterator it = payloads.iterator(); it.hasNext();) {
src/test/org/apache/lucene/search/TestPositionIncrement.java,282,        it.next();
src/test/org/apache/lucene/search/TestPositionIncrement.java,283,        //System.out.println(new String((byte[]) it.next()));
src/test/org/apache/lucene/search/TestPositionIncrement.java,305,    Collection pls = psu.getPayloadsForQuery(snq);
src/test/org/apache/lucene/search/TestPositionIncrement.java,307,    for (Iterator it = pls.iterator(); it.hasNext();) {
src/test/org/apache/lucene/search/TestPositionIncrement.java,308,      String s = new String((byte[]) it.next());
src/test/org/apache/lucene/search/TestPositionIncrement.java,280,"      for (@SuppressWarnings(""unused"") byte[] bytes : payloads) {"
src/test/org/apache/lucene/search/TestPositionIncrement.java,281,        count++;
src/test/org/apache/lucene/search/TestPositionIncrement.java,282,        //System.out.println(new String(bytes));
src/test/org/apache/lucene/search/TestPositionIncrement.java,283,
src/test/org/apache/lucene/search/TestPositionIncrement.java,284,      }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,89,"  public SpellChecker(Directory spellIndex,StringDistance sd) throws IOException {"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,90,    this.setSpellIndex(spellIndex);
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,91,    this.setStringDistance(sd);
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,92,  }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,93,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,102,   *
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,103,   * @param spellIndex
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,104,   * @throws IOException
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,106,  public void setSpellIndex(Directory spellIndex) throws IOException {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,107,    this.spellIndex = spellIndex;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,108,    if (!IndexReader.indexExists(spellIndex)) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,109,"        IndexWriter writer = new IndexWriter(spellIndex, null, true, IndexWriter.MaxFieldLength.UNLIMITED);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,110,        writer.close();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,111,    }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,112,"    // close the old searcher, if there was one"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,113,    if (searcher != null) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,114,      searcher.close();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,116,"    searcher = new IndexSearcher(this.spellIndex, true);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,118,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,122,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,147,   * @throws IOException
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,172,   * @throws IOException
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,179,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,180,    float min = this.minScore;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,181,    final int lengthWord = word.length();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,182,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,183,"    final int freq = (ir != null && field != null) ? ir.docFreq(new Term(field, word)) : 0;"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,184,    final int goalFreq = (morePopular && ir != null && field != null) ? freq : 0;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,185,"    // if the word exists in the real index and we don't care for word frequency, return the word itself"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,186,    if (!morePopular && freq > 0) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,187,      return new String[] { word };
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,188,    }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,189,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,190,    BooleanQuery query = new BooleanQuery();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,191,    String[] grams;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,192,    String key;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,193,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,194,    for (int ng = getMin(lengthWord); ng <= getMax(lengthWord); ng++) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,195,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,196,"      key = ""gram"" + ng; // form key"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,197,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,198,"      grams = formGrams(word, ng); // form word into ngrams (allow dups too)"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,199,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,200,      if (grams.length == 0) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,201,        continue; // hmm
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,202,      }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,203,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,204,      if (bStart > 0) { // should we boost prefixes?
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,205,"        add(query, ""start"" + ng, grams[0], bStart); // matches start of word"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,206,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,207,      }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,208,      if (bEnd > 0) { // should we boost suffixes
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,209,"        add(query, ""end"" + ng, grams[grams.length - 1], bEnd); // matches end of word"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,210,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,211,      }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,212,      for (int i = 0; i < grams.length; i++) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,213,"        add(query, key, grams[i]);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,214,      }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,215,    }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,216,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,217,    int maxHits = 10 * numSug;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,218,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,219,"//    System.out.println(""Q: "" + query);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,220,"    ScoreDoc[] hits = searcher.search(query, null, maxHits).scoreDocs;"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,221,"//    System.out.println(""HITS: "" + hits.length());"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,222,    SuggestWordQueue sugQueue = new SuggestWordQueue(numSug);
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,223,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,224,    // go thru more than 'maxr' matches in case the distance filter triggers
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,225,"    int stop = Math.min(hits.length, maxHits);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,226,    SuggestWord sugWord = new SuggestWord();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,227,    for (int i = 0; i < stop; i++) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,228,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,229,      sugWord.string = searcher.doc(hits[i].doc).get(F_WORD); // get orig word
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,230,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,231,"      // don't suggest a word for itself, that would be silly"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,232,      if (sugWord.string.equals(word)) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,233,        continue;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,235,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,236,      // edit distance
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,237,"      sugWord.score = sd.getDistance(word,sugWord.string);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,238,      if (sugWord.score < min) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,239,        continue;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,241,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,242,      if (ir != null && field != null) { // use the user index
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,243,"        sugWord.freq = ir.docFreq(new Term(field, sugWord.string)); // freq in the index"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,244,        // don't suggest a word that is not present in the field
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,245,        if ((morePopular && goalFreq > sugWord.freq) || sugWord.freq < 1) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,249,      sugQueue.insertWithOverflow(sugWord);
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,250,      if (sugQueue.size() == numSug) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,251,"        // if queue full, maintain the minScore score"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,252,        min = sugQueue.top().score;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,254,      sugWord = new SuggestWord();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,255,    }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,256,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,257,    // convert to array string
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,258,    String[] list = new String[sugQueue.size()];
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,259,    for (int i = sugQueue.size() - 1; i >= 0; i--) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,260,      list[i] = sugQueue.pop().string;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,262,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,263,    return list;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,302,"    IndexWriter writer = new IndexWriter(spellIndex, null, true, IndexWriter.MaxFieldLength.UNLIMITED);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,303,    writer.close();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,304,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,305,    //close the old searcher
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,306,    searcher.close();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,307,"    searcher = new IndexSearcher(this.spellIndex, true);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,314,   * @return true iff the word exists in the index
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,317,"    return searcher.docFreq(new Term(F_WORD, word)) > 0;"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,328,"    IndexWriter writer = new IndexWriter(spellIndex, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,329,    writer.setMergeFactor(mergeFactor);
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,330,    writer.setRAMBufferSizeMB(ramMB);
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,331,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,332,    Iterator<String> iter = dict.getWordsIterator();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,333,    while (iter.hasNext()) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,334,      String word = iter.next();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,335,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,336,      int len = word.length();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,337,      if (len < 3) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,338,"        continue; // too short we bail but ""too long"" is fine..."
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,339,      }
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,340,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,341,      if (this.exist(word)) { // if the word already exist in the gramindex
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,342,        continue;
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,344,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,345,      // ok index the word
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,346,"      Document doc = createDocument(word, getMin(len), getMax(len));"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,347,      writer.addDocument(doc);
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,349,    // close writer
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,350,    writer.optimize();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,351,    writer.close();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,352,    // also re-open the spell index to see our own changes when the next suggestion
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,353,    // is fetched:
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,354,    searcher.close();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,355,"    searcher = new IndexSearcher(this.spellIndex, true);"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,367,  private int getMin(int l) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,377,  private int getMax(int l) {
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,412,
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,414,   * Close the IndexSearcher used by this SpellChecker.
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,417,    searcher.close();
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,418,    searcher = null;
contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker.java,21,
contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker.java,22,import junit.framework.TestCase;
contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker.java,40,public class TestSpellChecker extends TestCase {
contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker.java,41,  private SpellChecker spellChecker;
contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker.java,59,
contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker.java,62,    spellChecker = new SpellChecker(spellindex);
contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker.java,78,
contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer.java,36, * dependent settings as {@link StandardAnalyzer}.</p>
contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer.java,63,"    result = new LowerCaseFilter(matchVersion, result);"
contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer.java,94,"      streams.result = new LowerCaseFilter(matchVersion, streams.result);"
contrib/snowball/src/test/org/apache/lucene/analysis/snowball/TestSnowball.java,21,import java.io.StringReader;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex.java,64,  /** todo: should this be a BitSet? */
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex.java,65,  private Set<Integer> deletedDocuments;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex.java,88,    deletedDocuments = new HashSet<Integer>();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex.java,180,      if (sourceIndexReader.isDeleted(i)) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex.java,181,        deletedDocuments.add(i);
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex.java,332,  public Set<Integer> getDeletedDocuments() {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,32,import org.apache.lucene.index.CorruptIndexException;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,33,import org.apache.lucene.index.IndexReader;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,34,import org.apache.lucene.index.IndexWriter;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,35,import org.apache.lucene.index.Term;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,36,import org.apache.lucene.index.TermDocs;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,37,import org.apache.lucene.index.TermEnum;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,38,import org.apache.lucene.index.TermFreqVector;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,39,import org.apache.lucene.index.TermPositions;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,40,import org.apache.lucene.index.TermVectorMapper;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,108,  private Set<InstantiatedDocument> deletedDocuments = new HashSet<InstantiatedDocument>();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,109,  private Set<Integer> deletedDocumentNumbers = new HashSet<Integer>();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,110,"  private Map<String,List<NormUpdate>> updatedNormsByFieldNameAndDocumentNumber = null;"
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,124,    return getIndex().getDocumentsByNumber().length - index.getDeletedDocuments().size() - deletedDocuments.size();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,133,  public boolean isDeleted(int n) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,134,    return getIndex().getDeletedDocuments().contains(n) || deletedDocumentNumbers.contains(n);
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,138,  public boolean hasDeletions() {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,139,    return getIndex().getDeletedDocuments().size() > 0 || deletedDocumentNumbers.size() > 0;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,144,    if (!getIndex().getDeletedDocuments().contains(docNum)) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,145,      if (deletedDocumentNumbers.add(docNum)) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,146,        deletedDocuments.add(getIndex().getDocumentsByNumber()[docNum]);
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,147,      }
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,153,    deletedDocumentNumbers.clear();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,154,    deletedDocuments.clear();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,164,    if (updatedNormsByFieldNameAndDocumentNumber != null) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,165,"      for (Map.Entry<String,List<NormUpdate>> e : updatedNormsByFieldNameAndDocumentNumber.entrySet()) {"
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,171,      updatedNormsByFieldNameAndDocumentNumber = null;
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,177,    if (deletedDocumentNumbers.size() > 0) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,178,      for (Integer doc : deletedDocumentNumbers) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,179,        getIndex().getDeletedDocuments().add(doc);
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,181,      deletedDocumentNumbers.clear();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,182,      deletedDocuments.clear();
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,302,    if (updatedNormsByFieldNameAndDocumentNumber != null) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,304,      List<NormUpdate> updated = updatedNormsByFieldNameAndDocumentNumber.get(field);
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,325,    if (updatedNormsByFieldNameAndDocumentNumber == null) {
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,326,"      updatedNormsByFieldNameAndDocumentNumber = new HashMap<String,List<NormUpdate>>(getIndex().getNormsByFieldNameAndDocumentNumber().size());"
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,328,    List<NormUpdate> list = updatedNormsByFieldNameAndDocumentNumber.get(field);
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,331,"      updatedNormsByFieldNameAndDocumentNumber.put(field, list);"
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java,414,"    for (Map.Entry<String,List<InstantiatedTermDocumentInformation>> e : doc.getVectorSpace().entrySet()) {"
contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermDocs.java,63,        if (reader.hasDeletions() && reader.isDeleted(currentDocumentInformation.getDocument().getDocumentNumber())) {
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,44,import org.apache.lucene.search.IndexSearcher;
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,45,import org.apache.lucene.search.TermQuery;
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,109,"    testTermDocs(dir, ii);"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,115,"  private void testTermDocs(Directory aprioriIndex, InstantiatedIndex testIndex) throws Exception {"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,120,"    TermEnum aprioriTermEnum = aprioriReader.terms(new Term(""c"", ""danny""));"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,122,    TermDocs aprioriTermDocs = aprioriReader.termDocs(aprioriTermEnum.term());
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,123,    TermDocs testTermDocs = testReader.termDocs(aprioriTermEnum.term());
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,125,"    assertEquals(aprioriTermDocs.next(), testTermDocs.next());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,126,"    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,128,"    assertEquals(aprioriTermDocs.skipTo(100), testTermDocs.skipTo(100));"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,129,"    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,131,"    assertEquals(aprioriTermDocs.next(), testTermDocs.next());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,132,"    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,137,"    assertEquals(aprioriTermDocs.skipTo(110), testTermDocs.skipTo(110));"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,138,"    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,140,"    assertEquals(aprioriTermDocs.skipTo(10), testTermDocs.skipTo(10));"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,141,"    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,143,"    assertEquals(aprioriTermDocs.skipTo(210), testTermDocs.skipTo(210));"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,144,"    assertEquals(aprioriTermDocs.doc(), testTermDocs.doc());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,147,    aprioriReader.close();
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,218,       // delete a few documents
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,219,"    IndexReader ir = IndexReader.open(aprioriIndex, false);"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,220,    ir.deleteDocument(3);
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,221,    ir.deleteDocument(8);
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,222,    ir.close();
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,224,    ir = testIndex.indexReaderFactory();
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,225,    ir.deleteDocument(3);
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,226,    ir.deleteDocument(8);
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,227,    ir.close();
src/java/org/apache/lucene/index/AllTermDocs.java,21,import java.io.IOException;
src/java/org/apache/lucene/index/AllTermDocs.java,23,class AllTermDocs implements TermDocs {
src/java/org/apache/lucene/index/AllTermDocs.java,25,  protected int maxDoc;
src/java/org/apache/lucene/index/AllTermDocs.java,26,  protected int doc = -1;
src/java/org/apache/lucene/index/AllTermDocs.java,32,    this.maxDoc = parent.maxDoc();
src/java/org/apache/lucene/index/AllTermDocs.java,33,  }
src/java/org/apache/lucene/index/AllTermDocs.java,34,
src/java/org/apache/lucene/index/AllTermDocs.java,35,  public void seek(Term term) throws IOException {
src/java/org/apache/lucene/index/AllTermDocs.java,36,    if (term==null) {
src/java/org/apache/lucene/index/AllTermDocs.java,37,      doc = -1;
src/java/org/apache/lucene/index/AllTermDocs.java,38,    } else {
src/java/org/apache/lucene/index/AllTermDocs.java,39,      throw new UnsupportedOperationException();
src/java/org/apache/lucene/index/AllTermDocs.java,40,    }
src/java/org/apache/lucene/index/AllTermDocs.java,41,  }
src/java/org/apache/lucene/index/AllTermDocs.java,42,
src/java/org/apache/lucene/index/AllTermDocs.java,43,  public void seek(TermEnum termEnum) throws IOException {
src/java/org/apache/lucene/index/AllTermDocs.java,44,    throw new UnsupportedOperationException();
src/java/org/apache/lucene/index/AllTermDocs.java,45,  }
src/java/org/apache/lucene/index/AllTermDocs.java,46,
src/java/org/apache/lucene/index/AllTermDocs.java,47,  public int doc() {
src/java/org/apache/lucene/index/AllTermDocs.java,48,    return doc;
src/java/org/apache/lucene/index/AllTermDocs.java,49,  }
src/java/org/apache/lucene/index/AllTermDocs.java,50,
src/java/org/apache/lucene/index/AllTermDocs.java,51,  public int freq() {
src/java/org/apache/lucene/index/AllTermDocs.java,52,    return 1;
src/java/org/apache/lucene/index/AllTermDocs.java,53,  }
src/java/org/apache/lucene/index/AllTermDocs.java,54,
src/java/org/apache/lucene/index/AllTermDocs.java,55,  public boolean next() throws IOException {
src/java/org/apache/lucene/index/AllTermDocs.java,56,    return skipTo(doc+1);
src/java/org/apache/lucene/index/AllTermDocs.java,57,  }
src/java/org/apache/lucene/index/AllTermDocs.java,58,
src/java/org/apache/lucene/index/AllTermDocs.java,59,"  public int read(int[] docs, int[] freqs) throws IOException {"
src/java/org/apache/lucene/index/AllTermDocs.java,60,    final int length = docs.length;
src/java/org/apache/lucene/index/AllTermDocs.java,61,    int i = 0;
src/java/org/apache/lucene/index/AllTermDocs.java,62,    while (i < length && doc < maxDoc) {
src/java/org/apache/lucene/index/AllTermDocs.java,63,      if (deletedDocs == null || !deletedDocs.get(doc)) {
src/java/org/apache/lucene/index/AllTermDocs.java,64,        docs[i] = doc;
src/java/org/apache/lucene/index/AllTermDocs.java,65,        freqs[i] = 1;
src/java/org/apache/lucene/index/AllTermDocs.java,66,        ++i;
src/java/org/apache/lucene/index/AllTermDocs.java,67,      }
src/java/org/apache/lucene/index/AllTermDocs.java,68,      doc++;
src/java/org/apache/lucene/index/AllTermDocs.java,69,    }
src/java/org/apache/lucene/index/AllTermDocs.java,70,    return i;
src/java/org/apache/lucene/index/AllTermDocs.java,71,  }
src/java/org/apache/lucene/index/AllTermDocs.java,72,
src/java/org/apache/lucene/index/AllTermDocs.java,73,  public boolean skipTo(int target) throws IOException {
src/java/org/apache/lucene/index/AllTermDocs.java,74,    doc = target;
src/java/org/apache/lucene/index/AllTermDocs.java,75,    while (doc < maxDoc) {
src/java/org/apache/lucene/index/AllTermDocs.java,76,      if (deletedDocs == null || !deletedDocs.get(doc)) {
src/java/org/apache/lucene/index/AllTermDocs.java,77,        return true;
src/java/org/apache/lucene/index/AllTermDocs.java,78,      }
src/java/org/apache/lucene/index/AllTermDocs.java,79,      doc++;
src/java/org/apache/lucene/index/AllTermDocs.java,80,    }
src/java/org/apache/lucene/index/AllTermDocs.java,81,    return false;
src/java/org/apache/lucene/index/AllTermDocs.java,84,  public void close() throws IOException {
src/java/org/apache/lucene/index/SegmentReader.java,910,   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,223,   // todo consider seeking and skipping some too
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,227,"    assertEquals(""Descripency during invalid use of the TermDocs API, see comments in test code for details."","
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,228,"        aprioriTermDocs.next(), testTermDocs.next());"
contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java,230,    // start using the API one is supposed to
src/java/org/apache/lucene/store/NativeFSLockFactory.java,149,};
contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballAnalyzer.java,54,  /** Builds the named analyzer with the given stop words. */
src/java/org/apache/lucene/util/AttributeSource.java,67,"          throw new IllegalArgumentException(""Could not instantiate class "" + attClass.getName());"
src/java/org/apache/lucene/util/AttributeSource.java,69,"          throw new IllegalArgumentException(""Could not instantiate class "" + attClass.getName());"
src/java/org/apache/lucene/util/AttributeSource.java,78,"              attClassImplMap.put(attClass, clazz = Class.forName(attClass.getName() + ""Impl"").asSubclass(AttributeImpl.class));"
contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java,58,public class SpellChecker {
contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java,185,      } else {
contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java,200,        if ((! outputUnigrams) && shingleBufferPosition == 1) {
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.java,275,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.java,276,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,22,import org.apache.lucene.analysis.TokenStream;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,24,import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,25,import org.apache.lucene.analysis.tokenattributes.TermAttribute;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,39,"    assertNext(ts, ""^"", 0, 0);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,40,"    assertNext(ts, ""hello"", 0, 5);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,41,"    assertNext(ts, ""world"", 6, 11);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,42,"    assertNext(ts, ""$"", 11, 11);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,43,    assertFalse(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,44,  }
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,45,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,46,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,47,"  private void assertNext(TokenStream ts, String text, int startOffset, int endOffset) throws IOException {"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,48,    TermAttribute termAtt = ts.addAttribute(TermAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,49,    OffsetAttribute offsetAtt = ts.addAttribute(OffsetAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,50,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,51,    assertTrue(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,52,"    assertEquals(text, termAtt.term());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,53,"    assertEquals(startOffset, offsetAtt.startOffset());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAndSuffixAwareTokenFilter.java,54,"    assertEquals(endOffset, offsetAtt.endOffset());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,22,import org.apache.lucene.analysis.TokenStream;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,24,import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,25,import org.apache.lucene.analysis.tokenattributes.TermAttribute;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,39,"    assertNext(ts, ""a"", 0, 1);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,40,"    assertNext(ts, ""b"", 1, 2);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,41,    assertFalse(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,48,"    assertNext(ts, ""^"", 0, 0);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,49,"    assertNext(ts, ""hello"", 0, 5);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,50,"    assertNext(ts, ""world"", 6, 11);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,51,"    assertNext(ts, ""$"", 11, 11);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,52,    assertFalse(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,53,  }
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,54,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,55,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,56,"  private void assertNext(TokenStream ts, String text, int startOffset, int endOffset) throws IOException {"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,57,    TermAttribute termAtt = ts.addAttribute(TermAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,58,    OffsetAttribute offsetAtt = ts.addAttribute(OffsetAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,59,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,60,    assertTrue(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,61,"    assertEquals(text, termAtt.term());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,62,"    assertEquals(startOffset, offsetAtt.startOffset());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPrefixAwareTokenFilter.java,63,"    assertEquals(endOffset, offsetAtt.endOffset());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,88,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,89,"    assertNext(ts, ""please"", 0, 6);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,90,"    assertNext(ts, ""please divide"", 0, 13);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,91,"    assertNext(ts, ""divide"", 7, 13);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,92,"    assertNext(ts, ""divide this"", 7, 18);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,93,"    assertNext(ts, ""this"", 14, 18);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,94,"    assertNext(ts, ""this sentence"", 14, 27);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,95,"    assertNext(ts, ""sentence"", 19, 27);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,96,"    assertNext(ts, ""sentence into"", 19, 32);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,97,"    assertNext(ts, ""into"", 28, 32);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,98,"    assertNext(ts, ""into shingles"", 28, 39);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,99,"    assertNext(ts, ""shingles"", 33, 39);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,100,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,101,
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,102,    assertFalse(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.java,103,
contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase.java,208,
contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest.java,21,import junit.framework.TestCase;
contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest.java,22,
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,43,"    assertTrue(""has TermAttribute"", ts.hasAttribute(TermAttribute.class));"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,48,"      assertTrue(""has OffsetAttribute"", ts.hasAttribute(OffsetAttribute.class));"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,54,"      assertTrue(""has TypeAttribute"", ts.hasAttribute(TypeAttribute.class));"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,60,"      assertTrue(""has PositionIncrementAttribute"", ts.hasAttribute(PositionIncrementAttribute.class));"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,73,"      assertTrue(""token ""+i+"" exists"", ts.incrementToken());"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,82,    int i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,83,    TermAttribute termAtt = source.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,84,    while (source.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,85,"      assertEquals(tokens1[i], termAtt.term());"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,86,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,87,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,88,"    assertEquals(tokens1.length, i);"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,90,    i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,91,    termAtt = sink1.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,92,    while (sink1.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,93,"      assertEquals(tokens1[i], termAtt.term());"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,94,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,95,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,96,"    assertEquals(tokens1.length, i);"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,98,    i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,99,    termAtt = sink2.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,100,    while (sink2.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,101,"      assertTrue(termAtt.term().equalsIgnoreCase(""The""));"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,102,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,103,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,104,"    assertEquals(""there should be two times 'the' in the stream"", 2, i);"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,118,    int i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,119,    TermAttribute termAtt = source1.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,120,    while (source1.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,121,"      assertEquals(tokens1[i], termAtt.term());"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,122,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,123,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,124,"    assertEquals(tokens1.length, i);"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,125,    i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,126,    termAtt = source2.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,127,    while (source2.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,128,"      assertEquals(tokens2[i], termAtt.term());"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,129,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,130,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,131,"    assertEquals(tokens2.length, i);"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,132,    i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,133,    termAtt = theDetector.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,134,    while (theDetector.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,135,"      assertTrue(""'"" + termAtt.term() + ""' is not equal to 'The'"", termAtt.term().equalsIgnoreCase(""The""));"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,136,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,137,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,138,"    assertEquals(""there must be 4 times 'The' in the stream"", 4, i);"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,139,    i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,140,    termAtt = dogDetector.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,141,    while (dogDetector.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,142,"      assertTrue(""'"" + termAtt.term() + ""' is not equal to 'Dogs'"", termAtt.term().equalsIgnoreCase(""Dogs""));"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,143,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,144,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,145,"    assertEquals(""there must be 2 times 'Dog' in the stream"", 2, i);"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,149,    i = 0;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,150,    termAtt = lowerCasing.getAttribute(TermAttribute.class);
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,151,    while (lowerCasing.incrementToken()) {
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,152,"      assertEquals(tokens1[i].toLowerCase(), termAtt.term());"
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,153,      i++;
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,154,    }
src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.java,155,"    assertEquals(i, tokens1.length);"
src/java/org/apache/lucene/util/OpenBitSet.java,805,      long h = 0x98761234;  // something non-zero for length==0
src/java/org/apache/lucene/util/OpenBitSet.java,806,      for (int i = bits.length; --i>=0;) {
src/java/org/apache/lucene/util/OpenBitSet.java,810,    return (int)((h>>32) ^ h);  // fold leftmost bits into right
src/test/org/apache/lucene/util/TestOpenBitSet.java,233,
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKTokenizer.java,302,      final int finalOffset = offset;
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java,132,            if (dataLen == -1) return flush();
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java,133,            else
contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java,165,      final int finalOffset = offset;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,21,import java.io.StringReader;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,25,import org.apache.lucene.analysis.TokenStream;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,26,import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,27,import org.apache.lucene.analysis.tokenattributes.TermAttribute;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,28,import org.apache.lucene.analysis.tokenattributes.TypeAttribute;
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,50,    CJKTokenizer tokenizer = new CJKTokenizer(new StringReader(str));
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,51,    TermAttribute termAtt = tokenizer.getAttribute(TermAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,52,    OffsetAttribute offsetAtt = tokenizer.getAttribute(OffsetAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,53,    TypeAttribute typeAtt = tokenizer.getAttribute(TypeAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,55,      assertTrue(tokenizer.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,56,"      assertEquals(termAtt.term(), out_tokens[i].termText);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,57,"      assertEquals(offsetAtt.startOffset(), out_tokens[i].start);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,58,"      assertEquals(offsetAtt.endOffset(), out_tokens[i].end);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,59,"      assertEquals(typeAtt.type(), out_tokens[i].type);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,61,    assertFalse(tokenizer.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,65,"    TokenStream ts = a.reusableTokenStream(""dummy"", new StringReader(str));"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,66,    TermAttribute termAtt = ts.getAttribute(TermAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,67,    OffsetAttribute offsetAtt = ts.getAttribute(OffsetAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,68,    TypeAttribute typeAtt = ts.getAttribute(TypeAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,70,      assertTrue(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,71,"      assertEquals(termAtt.term(), out_tokens[i].termText);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,72,"      assertEquals(offsetAtt.startOffset(), out_tokens[i].start);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,73,"      assertEquals(offsetAtt.endOffset(), out_tokens[i].end);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,74,"      assertEquals(typeAtt.type(), out_tokens[i].type);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,76,    assertFalse(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,222,"    TokenStream ts = analyzer.tokenStream(""dummy"", new StringReader(""\u4e00\u4e01\u4e02""));"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,223,    TermAttribute termAtt = ts.getAttribute(TermAttribute.class);
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,224,    assertTrue(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,225,"    assertEquals(""\u4e00\u4e01"", termAtt.term());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,226,    assertTrue(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,227,"    assertEquals(""\u4e01\u4e02"", termAtt.term());"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer.java,228,    assertFalse(ts.incrementToken());
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java,69,"    assertTokenStreamContents(tokenizer, new String[]{""a""}, new int[]{0}, new int[]{1});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java,74,"    assertTokenStreamContents(tokenizer, new String[]{""e""}, new int[]{4}, new int[]{5});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java,79,"    assertTokenStreamContents(tokenizer, new String[0], new int[0], new int[0]);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java,84,"    assertTokenStreamContents(tokenizer, new String[]{""a"",""ab"",""abc""}, new int[]{0,0,0}, new int[]{1,2,3});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java,89,"    assertTokenStreamContents(tokenizer, new String[]{""e"",""de"",""cde""}, new int[]{4,3,2}, new int[]{5,5,5});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java,94,"    assertTokenStreamContents(tokenizer, new String[]{""a"",""ab"",""abc""}, new int[]{0,0,0}, new int[]{1,2,3});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java,96,"    assertTokenStreamContents(tokenizer, new String[]{""a"",""ab"",""abc""}, new int[]{0,0,0}, new int[]{1,2,3});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java,61,"        assertTokenStreamContents(tokenizer, new String[]{""a"",""b"",""c"",""d"",""e""}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java,66,"        assertTokenStreamContents(tokenizer, new String[]{""ab"",""bc"",""cd"",""de""}, new int[]{0,1,2,3}, new int[]{2,3,4,5});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java,74,"          new int[]{1,2,3,4,5, 2,3,4,5, 3,4,5}"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java,80,"        assertTokenStreamContents(tokenizer, new String[0], new int[0], new int[0]);"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java,85,"      assertTokenStreamContents(tokenizer, new String[]{""a"",""b"",""c"",""d"",""e""}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});"
contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java,87,"      assertTokenStreamContents(tokenizer, new String[]{""a"",""b"",""c"",""d"",""e""}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});"
contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest.java,48,"    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(""This is a [[Category:foo]]""));"
contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest.java,50,"        new String[] { ""This"", ""is"", ""a"", ""foo"" });"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,82,"  public static void assertTokenStreamContents(TokenStream ts, String[] output, int startOffsets[], int endOffsets[], String types[], int posIncrements[]) throws IOException {"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,90,    if (startOffsets != null || endOffsets != null) {
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,136,"    assertTokenStreamContents(ts, output, null, null, null, null);"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,140,"    assertTokenStreamContents(ts, output, null, null, types, null);"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,144,"    assertTokenStreamContents(ts, output, null, null, null, posIncrements);"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,148,"    assertTokenStreamContents(ts, output, startOffsets, endOffsets, null, null);"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,152,"    assertTokenStreamContents(ts, output, startOffsets, endOffsets, null, posIncrements);"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,157,"    assertTokenStreamContents(a.tokenStream(""dummy"", new StringReader(input)), output, startOffsets, endOffsets, types, posIncrements);"
src/test/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,182,"    assertTokenStreamContents(a.reusableTokenStream(""dummy"", new StringReader(input)), output, startOffsets, endOffsets, types, posIncrements);"
src/java/org/apache/lucene/search/ParallelMultiSearcher.java,178,
src/java/org/apache/lucene/util/AttributeSource.java,24,import java.util.IdentityHashMap;
src/java/org/apache/lucene/util/AttributeSource.java,57,"      private static final IdentityHashMap<Class<? extends Attribute>, Class<? extends AttributeImpl>> attClassImplMap ="
src/java/org/apache/lucene/util/AttributeSource.java,58,"        new IdentityHashMap<Class<? extends Attribute>, Class<? extends AttributeImpl>>();"
src/java/org/apache/lucene/util/AttributeSource.java,75,          Class<? extends AttributeImpl> clazz = attClassImplMap.get(attClass);
src/java/org/apache/lucene/util/AttributeSource.java,79,"                clazz = Class.forName(attClass.getName() + ""Impl"", true, attClass.getClassLoader())"
src/java/org/apache/lucene/util/AttributeSource.java,80,                .asSubclass(AttributeImpl.class)
src/java/org/apache/lucene/util/AttributeSource.java,176,"  private static final IdentityHashMap<Class<? extends AttributeImpl>,LinkedList<Class<? extends Attribute>>> knownImplClasses ="
src/java/org/apache/lucene/util/AttributeSource.java,177,"    new IdentityHashMap<Class<? extends AttributeImpl>,LinkedList<Class<? extends Attribute>>>();"
src/java/org/apache/lucene/util/AttributeSource.java,190,    LinkedList<Class<? extends Attribute>> foundInterfaces;
src/java/org/apache/lucene/util/AttributeSource.java,194,"        knownImplClasses.put(clazz, foundInterfaces = new LinkedList<Class<? extends Attribute>>());"
src/java/org/apache/lucene/util/AttributeSource.java,201,              foundInterfaces.add(curInterface.asSubclass(Attribute.class));
src/java/org/apache/lucene/util/AttributeSource.java,210,    for (Class<? extends Attribute> curInterface : foundInterfaces) {
src/java/org/apache/lucene/util/VirtualMethod.java,23,import java.util.IdentityHashMap;
src/java/org/apache/lucene/util/VirtualMethod.java,67,"  private final IdentityHashMap<Class<? extends C>, Integer> cache ="
src/java/org/apache/lucene/util/VirtualMethod.java,68,"    new IdentityHashMap<Class<? extends C>, Integer>();"
src/java/org/apache/lucene/search/payloads/MaxPayloadFunction.java,30,"    return Math.max(currentPayloadScore, currentScore);"
src/java/org/apache/lucene/search/payloads/MinPayloadFunction.java,26,    @Override
src/java/org/apache/lucene/search/payloads/MinPayloadFunction.java,27,"    public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {"
src/java/org/apache/lucene/search/payloads/MinPayloadFunction.java,28,"    return Math.min(currentPayloadScore, currentScore);"
contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder.java,75,"    String[] values = getFieldValues( reader, docId, fieldName );"
contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder.java,92,    StringBuilder fragment = new StringBuilder();
contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder.java,94,"    String src = getFragmentSource( buffer, index, values, s, fragInfo.endOffset );"
contrib/queryparser/src/java/org/apache/lucene/queryParser/core/nodes/QueryNodeImpl.java,77,    for (QueryNode child : getChildren()) {
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,50,  private final HashSet<String> synced = new HashSet<String>();
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,90,    if (!readOnly) {
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,91,      // We assume that this segments_N was previously
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,92,      // properly sync'd:
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,93,"      synced.addAll(sis.files(directory, true));"
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,94,    }
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,95,
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,131,    if (!readOnly) {
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,132,      // We assume that this segments_N was previously
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,133,      // properly sync'd:
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,134,"      synced.addAll(infos.files(directory, true));"
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,135,    }
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,186,    if (!readOnly) {
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,187,      // We assume that this segments_N was previously
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,188,      // properly sync'd:
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,189,"      synced.addAll(infos.files(directory, true));"
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,190,    }
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,789,"        final Collection<String> files = segmentInfos.files(directory, false);"
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,790,        for (final String fileName : files) {
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,791,          if (!synced.contains(fileName)) {
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,792,            assert directory.fileExists(fileName);
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,793,            directory.sync(fileName);
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,794,            synced.add(fileName);
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,795,          }
lucene/src/java/org/apache/lucene/index/DirectoryReader.java,796,        }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,1126,"          synced.addAll(segmentInfos.files(directory, true));"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,1151,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,1152,        // We assume that this segments_N was previously
lucene/src/java/org/apache/lucene/index/IndexWriter.java,1153,        // properly sync'd:
lucene/src/java/org/apache/lucene/index/IndexWriter.java,1154,"        synced.addAll(segmentInfos.files(directory, true));"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4617,  // Files that have been sync'd already
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4618,  private HashSet<String> synced = new HashSet<String>();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4619,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4620,  // Files that are now being sync'd
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4621,  private HashSet<String> syncing = new HashSet<String>();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4622,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4623,"  private boolean startSync(String fileName, Collection<String> pending) {"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4624,    synchronized(synced) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4625,      if (!synced.contains(fileName)) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4626,        if (!syncing.contains(fileName)) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4627,          syncing.add(fileName);
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4628,          return true;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4629,        } else {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4630,          pending.add(fileName);
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4631,          return false;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4632,        }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4633,      } else
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4634,        return false;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4635,    }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4636,  }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4637,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4638,"  private void finishSync(String fileName, boolean success) {"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4639,    synchronized(synced) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4640,      assert syncing.contains(fileName);
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4641,      syncing.remove(fileName);
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4642,      if (success)
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4643,        synced.add(fileName);
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4644,      synced.notifyAll();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4645,    }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4646,  }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4647,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4648,  /** Blocks until all files in syncing are sync'd */
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4649,  private boolean waitForAllSynced(Collection<String> syncing) throws IOException {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4650,    synchronized(synced) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4651,      Iterator<String> it = syncing.iterator();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4652,      while(it.hasNext()) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4653,        final String fileName = it.next();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4654,        while(!synced.contains(fileName)) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4655,          if (!syncing.contains(fileName))
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4656,            // There was an error because a file that was
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4657,            // previously syncing failed to appear in synced
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4658,            return false;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4659,          else
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4660,            try {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4661,              synced.wait();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4662,            } catch (InterruptedException ie) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4663,              throw new ThreadInterruptedException(ie);
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4664,            }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4665,        }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4666,      }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4667,      return true;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4668,    }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4669,  }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4670,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4764,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4765,        // Loop until all files toSync references are sync'd:
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4766,        while(true) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4767,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4768,          final Collection<String> pending = new ArrayList<String>();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4769,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4770,"          Iterator<String> it = toSync.files(directory, false).iterator();"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4771,          while(it.hasNext()) {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4772,            final String fileName = it.next();
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4773,"            if (startSync(fileName, pending)) {"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4774,              boolean success = false;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4775,              try {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4776,"                // Because we incRef'd this commit point, above,"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4777,                // the file had better exist:
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4778,"                assert directory.fileExists(fileName): ""file '"" + fileName + ""' does not exist dir="" + directory;"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4779,                if (infoStream != null)
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4780,"                  message(""now sync "" + fileName);"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4781,                directory.sync(fileName);
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4782,                success = true;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4783,              } finally {
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4784,"                finishSync(fileName, success);"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4785,              }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4786,            }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4787,          }
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4788,
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4789,          // All files that I require are either synced or being
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4790,"          // synced by other threads.  If they are being synced,"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4791,          // we must at this point block until they are done.
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4792,"          // If this returns false, that means an error in"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4793,          // another thread resulted in failing to actually
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4794,"          // sync one of our files, so we repeat:"
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4795,          if (waitForAllSynced(pending))
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4796,            break;
lucene/src/java/org/apache/lucene/index/IndexWriter.java,4797,        }
lucene/src/java/org/apache/lucene/index/SegmentInfos.java,855,      dir.sync(fileName);
lucene/src/java/org/apache/lucene/store/Directory.java,81,  /** Ensure that any writes to this file are moved to
lucene/src/java/org/apache/lucene/store/Directory.java,82,   *  stable storage.  Lucene uses this to properly commit
lucene/src/java/org/apache/lucene/store/Directory.java,83,"   *  changes to the index, to prevent a machine/OS crash"
lucene/src/java/org/apache/lucene/store/Directory.java,84,   *  from corrupting the index. */
lucene/src/java/org/apache/lucene/store/Directory.java,85,  public void sync(String name) throws IOException {}
lucene/src/java/org/apache/lucene/store/FSDirectory.java,97,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,98,  private static MessageDigest DIGESTER;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,113,  private boolean checked;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,114,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,115,  final void createDir() throws IOException {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,116,    if (!checked) {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,117,      if (!directory.exists())
lucene/src/java/org/apache/lucene/store/FSDirectory.java,118,        if (!directory.mkdirs())
lucene/src/java/org/apache/lucene/store/FSDirectory.java,119,"          throw new IOException(""Cannot create directory: "" + directory);"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,120,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,121,      checked = true;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,122,    }
lucene/src/java/org/apache/lucene/store/FSDirectory.java,123,  }
lucene/src/java/org/apache/lucene/store/FSDirectory.java,124,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,125,  /** Initializes the directory to create a new file with the given name.
lucene/src/java/org/apache/lucene/store/FSDirectory.java,126,   * This method should be used in {@link #createOutput}. */
lucene/src/java/org/apache/lucene/store/FSDirectory.java,127,  protected final void initOutput(String name) throws IOException {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,128,    ensureOpen();
lucene/src/java/org/apache/lucene/store/FSDirectory.java,129,    createDir();
lucene/src/java/org/apache/lucene/store/FSDirectory.java,130,"    File file = new File(directory, name);"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,131,"    if (file.exists() && !file.delete())          // delete existing, if any"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,132,"      throw new IOException(""Cannot overwrite: "" + file);"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,133,  }
lucene/src/java/org/apache/lucene/store/FSDirectory.java,134,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,135,  /** The underlying filesystem directory */
lucene/src/java/org/apache/lucene/store/FSDirectory.java,136,  protected File directory = null;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,137,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,145,    path = getCanonicalPath(path);
lucene/src/java/org/apache/lucene/store/FSDirectory.java,150,    directory = path;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,164,        lf.setLockDir(this.directory);
lucene/src/java/org/apache/lucene/store/FSDirectory.java,166,      } else if (dir.getCanonicalPath().equals(this.directory.getCanonicalPath())) {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,199,    /* For testing:
lucene/src/java/org/apache/lucene/store/FSDirectory.java,200,"    MMapDirectory dir=new MMapDirectory(path, lockFactory);"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,201,    dir.setUseUnmap(true);
lucene/src/java/org/apache/lucene/store/FSDirectory.java,202,    return dir;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,203,    */
lucene/src/java/org/apache/lucene/store/FSDirectory.java,204,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,298,"    File fullFile = new File(directory, name);"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,299,    boolean success = false;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,300,    int retryCount = 0;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,301,    IOException exc = null;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,302,    while(!success && retryCount < 5) {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,303,      retryCount++;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,304,      RandomAccessFile file = null;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,305,      try {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,306,        try {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,307,"          file = new RandomAccessFile(fullFile, ""rw"");"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,308,          file.getFD().sync();
lucene/src/java/org/apache/lucene/store/FSDirectory.java,309,          success = true;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,310,        } finally {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,311,          if (file != null)
lucene/src/java/org/apache/lucene/store/FSDirectory.java,312,            file.close();
lucene/src/java/org/apache/lucene/store/FSDirectory.java,313,        }
lucene/src/java/org/apache/lucene/store/FSDirectory.java,314,      } catch (IOException ioe) {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,315,        if (exc == null)
lucene/src/java/org/apache/lucene/store/FSDirectory.java,316,          exc = ioe;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,317,        try {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,318,          // Pause 5 msec
lucene/src/java/org/apache/lucene/store/FSDirectory.java,319,          Thread.sleep(5);
lucene/src/java/org/apache/lucene/store/FSDirectory.java,320,        } catch (InterruptedException ie) {
lucene/src/java/org/apache/lucene/store/FSDirectory.java,321,          throw new ThreadInterruptedException(ie);
lucene/src/java/org/apache/lucene/store/FSDirectory.java,322,        }
lucene/src/java/org/apache/lucene/store/FSDirectory.java,323,      }
lucene/src/java/org/apache/lucene/store/FSDirectory.java,324,    }
lucene/src/java/org/apache/lucene/store/FSDirectory.java,325,    if (!success)
lucene/src/java/org/apache/lucene/store/FSDirectory.java,326,      // Throw original exception
lucene/src/java/org/apache/lucene/store/FSDirectory.java,327,      throw exc;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,342,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,393,  /**
lucene/src/java/org/apache/lucene/store/FSDirectory.java,394,   * Default read chunk size.  This is a conditional
lucene/src/java/org/apache/lucene/store/FSDirectory.java,395,"   * default: on 32bit JVMs, it defaults to 100 MB.  On"
lucene/src/java/org/apache/lucene/store/FSDirectory.java,396,"   * 64bit JVMs, it's <code>Integer.MAX_VALUE</code>."
lucene/src/java/org/apache/lucene/store/FSDirectory.java,397,   * @see #setReadChunkSize
lucene/src/java/org/apache/lucene/store/FSDirectory.java,398,   */
lucene/src/java/org/apache/lucene/store/FSDirectory.java,399,  public static final int DEFAULT_READ_CHUNK_SIZE = Constants.JRE_IS_64BIT ? Integer.MAX_VALUE: 100 * 1024 * 1024;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,400,
lucene/src/java/org/apache/lucene/store/FSDirectory.java,401,  // LUCENE-1566
lucene/src/java/org/apache/lucene/store/FSDirectory.java,402,  private int chunkSize = DEFAULT_READ_CHUNK_SIZE;
lucene/src/java/org/apache/lucene/store/FSDirectory.java,403,
lucene/src/java/org/apache/lucene/store/FileSwitchDirectory.java,133,    getDirectory(name).sync(name);
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,94,  private boolean useUnmapHack = false;
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,95,  private int maxBBuf = Constants.JRE_IS_64BIT ? Integer.MAX_VALUE : (256*1024*1024);
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,96,
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,192,  }
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,399,
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,400,  /** Creates an IndexInput for the file with the given name. */
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,401,  @Override
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,402,"  public IndexInput openInput(String name, int bufferSize) throws IOException {"
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,403,    ensureOpen();
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,404,"    File f =  new File(getDirectory(), name);"
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,405,"    RandomAccessFile raf = new RandomAccessFile(f, ""r"");"
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,406,    try {
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,407,      return (raf.length() <= maxBBuf)
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,408,             ? (IndexInput) new MMapIndexInput(raf)
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,409,"             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);"
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,410,    } finally {
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,411,      raf.close();
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,412,    }
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,413,  }
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,414,
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,415,  /** Creates an IndexOutput for the file with the given name. */
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,416,  @Override
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,417,  public IndexOutput createOutput(String name) throws IOException {
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,418,    initOutput(name);
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,419,"    return new SimpleFSDirectory.SimpleFSIndexOutput(new File(directory, name));"
lucene/src/java/org/apache/lucene/store/MMapDirectory.java,420,  }
lucene/src/java/org/apache/lucene/store/NIOFSDirectory.java,70,  /** Creates an IndexOutput for the file with the given name. */
lucene/src/java/org/apache/lucene/store/NIOFSDirectory.java,71,  @Override
lucene/src/java/org/apache/lucene/store/NIOFSDirectory.java,72,  public IndexOutput createOutput(String name) throws IOException {
lucene/src/java/org/apache/lucene/store/NIOFSDirectory.java,73,    initOutput(name);
lucene/src/java/org/apache/lucene/store/NIOFSDirectory.java,74,"    return new SimpleFSDirectory.SimpleFSIndexOutput(new File(directory, name));"
lucene/src/java/org/apache/lucene/store/NIOFSDirectory.java,75,  }
lucene/src/java/org/apache/lucene/store/NIOFSDirectory.java,76,
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,52,  /** Creates an IndexOutput for the file with the given name. */
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,53,  @Override
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,54,  public IndexOutput createOutput(String name) throws IOException {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,55,    initOutput(name);
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,56,"    return new SimpleFSIndexOutput(new File(directory, name));"
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,57,  }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,58,
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,171,
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,172,  protected static class SimpleFSIndexOutput extends BufferedIndexOutput {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,173,    RandomAccessFile file = null;
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,174,
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,175,"    // remember if the file is open, so that we don't try to close it"
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,176,    // more than once
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,177,    private volatile boolean isOpen;
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,178,
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,179,    public SimpleFSIndexOutput(File path) throws IOException {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,180,"      file = new RandomAccessFile(path, ""rw"");"
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,181,      isOpen = true;
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,182,    }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,183,
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,184,    /** output methods: */
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,185,    @Override
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,186,"    public void flushBuffer(byte[] b, int offset, int size) throws IOException {"
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,187,"      file.write(b, offset, size);"
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,188,    }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,189,    @Override
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,190,    public void close() throws IOException {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,191,      // only close the file if it has not been closed yet
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,192,      if (isOpen) {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,193,        boolean success = false;
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,194,        try {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,195,          super.close();
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,196,          success = true;
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,197,        } finally {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,198,          isOpen = false;
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,199,          if (!success) {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,200,            try {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,201,              file.close();
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,202,            } catch (Throwable t) {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,203,              // Suppress so we don't mask original exception
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,204,            }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,205,          } else
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,206,            file.close();
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,207,        }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,208,      }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,209,    }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,210,
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,211,    /** Random-access methods */
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,212,    @Override
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,213,    public void seek(long pos) throws IOException {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,214,      super.seek(pos);
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,215,      file.seek(pos);
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,216,    }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,217,    @Override
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,218,    public long length() throws IOException {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,219,      return file.length();
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,220,    }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,221,    @Override
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,222,    public void setLength(long length) throws IOException {
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,223,      file.setLength(length);
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,224,    }
lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.java,225,  }
lucene/src/test/org/apache/lucene/store/MockRAMDirectory.java,80,  public synchronized void sync(String name) throws IOException {
lucene/src/test/org/apache/lucene/store/MockRAMDirectory.java,81,    maybeThrowDeterministicException();
lucene/src/test/org/apache/lucene/store/MockRAMDirectory.java,84,    if (unSyncedFiles.contains(name))
lucene/src/test/org/apache/lucene/store/MockRAMDirectory.java,85,      unSyncedFiles.remove(name);
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,106,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,108,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,110,  //We are around the prime meridian
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,111,  if (longX == 0.0) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,112,   longX = longX2;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,113,   longY = 0.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,114,"         shape = getShapeLoop(shape,ctp,latX,longX,latY,longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,115,  } else {//we are around the 180th longitude
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,116,   longX = longX2;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,117,   longY = -180.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,118,"   shape = getShapeLoop(shape,ctp,latY,longY,latX,longX);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,119, }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,121,"        //System.err.println(""getBoxShape2:""+latY+"","" + longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,122,"        //System.err.println(""getBoxShape2:""+latX+"","" + longX);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,123,    }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,135,
lucene/src/java/org/apache/lucene/analysis/standard/StandardFilter.java,37,  private static final String APOSTROPHE_TYPE = StandardTokenizerImpl.TOKEN_TYPES[StandardTokenizerImpl.APOSTROPHE];
lucene/src/java/org/apache/lucene/analysis/standard/StandardFilter.java,38,  private static final String ACRONYM_TYPE = StandardTokenizerImpl.TOKEN_TYPES[StandardTokenizerImpl.ACRONYM];
lucene/src/java/org/apache/lucene/analysis/standard/StandardFilter.java,41,  private TypeAttribute typeAtt;
lucene/src/java/org/apache/lucene/analysis/standard/StandardFilter.java,42,  private TermAttribute termAtt;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,26,import org.apache.lucene.analysis.tokenattributes.TermAttribute;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,58,  private final StandardTokenizerImpl scanner;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,114,    this.scanner = new StandardTokenizerImpl(input);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,123,    this.scanner = new StandardTokenizerImpl(input);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,132,    this.scanner = new StandardTokenizerImpl(input);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,136,"  private void init(Reader input, Version matchVersion) {"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,143,    termAtt = addAttribute(TermAttribute.class);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,144,    offsetAtt = addAttribute(OffsetAttribute.class);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,145,    posIncrAtt = addAttribute(PositionIncrementAttribute.class);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,146,    typeAtt = addAttribute(TypeAttribute.class);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,150,"  // offset, positionIncrement and type"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,151,  private TermAttribute termAtt;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,152,  private OffsetAttribute offsetAtt;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,153,  private PositionIncrementAttribute posIncrAtt;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,154,  private TypeAttribute typeAtt;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,169,      if (tokenType == StandardTokenizerImpl.YYEOF) {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,177,"        offsetAtt.setOffset(correctOffset(start), correctOffset(start+termAtt.termLength()));"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,181,        if (tokenType == StandardTokenizerImpl.ACRONYM_DEP) {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,183,            typeAtt.setType(StandardTokenizerImpl.TOKEN_TYPES[StandardTokenizerImpl.HOST]);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,184,            termAtt.setTermLength(termAtt.termLength() - 1); // remove extra '.'
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,186,            typeAtt.setType(StandardTokenizerImpl.TOKEN_TYPES[StandardTokenizerImpl.ACRONYM]);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,189,          typeAtt.setType(StandardTokenizerImpl.TOKEN_TYPES[tokenType]);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,206,  /*
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,207,   * (non-Javadoc)
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,208,   *
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,209,   * @see org.apache.lucene.analysis.TokenStream#reset()
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,210,   */
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,211,  @Override
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,212,  public void reset() throws IOException {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,213,    super.reset();
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,214,    scanner.yyreset(input);
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,215,  }
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,216,
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java,220,    reset();
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,1,/* The following code was generated by JFlex 1.4.1 on 9/4/08 6:49 PM */
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,24,WARNING: if you change StandardTokenizerImpl.jflex and need to regenerate
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,25,"      the tokenizer, only use Java 1.4 !!!"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,26,"      This grammar currently uses constructs (eg :digit:, :letter:) whose"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,27,      meaning can vary according to the JRE used to run jflex.  See
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,28,      https://issues.apache.org/jira/browse/LUCENE-1126 for details.
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,29,      For current backwards compatibility it is needed to support
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,30,      only Java 1.4 - this will change in Lucene 3.1.
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,34,import org.apache.lucene.analysis.Token;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,35,import org.apache.lucene.analysis.tokenattributes.TermAttribute;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,40," * <a href=""http://www.jflex.de/"">JFlex</a> 1.4.1"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,41, * on 9/4/08 6:49 PM from the specification file
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,42, * <tt>/tango/mike/src/lucene.standarddigit/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex</tt>
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,44,class StandardTokenizerImpl {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,310,  /** the textposition at the last state to be included in yytext */
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,311,  private int zzPushbackPos;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,312,
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,357,@Deprecated
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,368, * Fills Lucene token with the current token text.
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,370,final void getText(Token t) {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,371,"  t.setTermBuffer(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,375, * Fills TermAttribute with the current token text.
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,377,final void getText(TermAttribute t) {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,378,"  t.setTermBuffer(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);"
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,388,  StandardTokenizerImpl(java.io.Reader in) {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,398,  StandardTokenizerImpl(java.io.InputStream in) {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,440,      zzPushbackPos-= zzStartRead;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,456,    if (numRead < 0) {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,457,      return true;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,458,    }
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,459,    else {
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,493,    zzCurrentPos = zzMarkedPos = zzPushbackPos = 0;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,623,      zzState = zzLexicalState;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,671,        case 4:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,672,          { return HOST;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,679,        case 8:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,680,          { return ACRONYM_DEP;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,683,        case 1:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,684,          { /* ignore */
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,687,        case 5:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,688,          { return NUM;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,691,        case 3:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,692,          { return CJ;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,695,        case 2:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,696,          { return ALPHANUM;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,699,        case 7:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,700,          { return COMPANY;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,703,        case 6:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,704,          { return APOSTROPHE;
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,707,        case 10:
lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java,708,          { return EMAIL;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,77,    double d = widthMi;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,78,"    LatLng ur = boxCorners(center, d, 45.0); // assume right angles"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,79,"    LatLng ll = boxCorners(center, d, 225.0);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,80,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,81,"    //System.err.println(""boxCorners: ur "" + ur.getLat() + ',' + ur.getLng());"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,82,"    //System.err.println(""boxCorners: cnt "" + center.getLat() + ',' + center.getLng());"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,83,"    //System.err.println(""boxCorners: ll "" + ll.getLat() + ',' + ll.getLng());"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/shape/LLRect.java,84,"    return new LLRect(ll, ur);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,20,import java.math.BigDecimal;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,21,import java.math.RoundingMode;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,22,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,67,    LatLng ll = box1.getLowerLeft();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,68,    LatLng ur = box1.getUpperRight();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,69,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,70,    double latY = ur.getLat();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,71,    double latX = ll.getLat();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,72,    double longY = ur.getLng();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,73,    double longX = ll.getLng();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,74,    double longX2 = 0.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,75, //These two if checks setup us up to deal with issues around the prime meridian and the 180th meridian
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,76," //In these two cases, we need to get tiles (tiers) from the lower left up to the meridian and then"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,77, //from the meridan to the upper right
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,78," //Are we crossing the 180 deg. longitude, if so, we need to do some special things"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,79,    if (ur.getLng() < 0.0 && ll.getLng() > 0.0) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,80, longX2 = ll.getLng();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,81,  longX = -180.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,82,    }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,83," //are we crossing the prime meridian (0 degrees)?  If so, we need to account for it and boxes on both sides"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,84,    if (ur.getLng() > 0.0 && ll.getLng() < 0.0) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,85, longX2 = ll.getLng();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,86,  longX = 0.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,88,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,89,"    //System.err.println(""getBoxShape:""+latY+"","" + longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,90,"    //System.err.println(""getBoxShape:""+latX+"","" + longX);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,91,"    CartesianTierPlotter ctp = new CartesianTierPlotter(2, projector,tierPrefix);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,92,    int bestFit = ctp.bestFit(miles);
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,93, if (bestFit < minTier){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,94,  bestFit = minTier;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,95, } else if (bestFit > maxTier){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,96,  bestFit = maxTier;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,97, }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,98,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,99,"    ctp = new CartesianTierPlotter(bestFit, projector,tierPrefix);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,100,    Shape shape = new Shape(ctp.getTierFieldName());
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,101,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,102,    // generate shape
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,103,    // iterate from startX->endX
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,104,    //     iterate from startY -> endY
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,105,    //      shape.add(currentLat.currentLong);
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,106," //for the edge cases (prime meridian and the 180th meridian), this call handles all tiles East of the meridian"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,107,"    //for all other cases, it handles the whole set of tiles"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,108,"    shape = getShapeLoop(shape,ctp,latX,longX,latY,longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,109, if (longX2 != 0.0) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,110,       if (longX == 0.0) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,111,         longX = longX2;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,112,         longY = 0.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,113,         //handles the lower left longitude to the prime meridian
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,114,"         //shape = getShapeLoop(shape, ctp, latX, longX, latY, longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,115,       } else {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,116,         //this clause handles the lower left longitude up to the 180 meridian
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,117,         longX = longX2;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,118,         longY = 180.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,119,       }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,120,"       shape = getShapeLoop(shape, ctp, latX, longX, latY, longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,121,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,122,"       //System.err.println(""getBoxShape2:""+latY+"","" + longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,123,"         //System.err.println(""getBoxShape2:""+latX+"","" + longX);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,124,     }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,125,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,130,"  public Shape getShapeLoop(Shape shape, CartesianTierPlotter ctp, double latX, double longX, double latY, double longY)"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,131,  {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,132,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,133,"    //System.err.println(""getShapeLoop:""+latY+"","" + longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,134,"    //System.err.println(""getShapeLoop:""+latX+"","" + longX);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,135,"    double beginAt = ctp.getTierBoxId(latX, longX);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,136,"    double endAt = ctp.getTierBoxId(latY, longY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,137,    if (beginAt > endAt){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,138,       double tmp = beginAt;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,139,       beginAt = endAt;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,140,       endAt = tmp;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,141, }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,142,    double tierVert = ctp.getTierVerticalPosDivider();
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,143,"    //System.err.println("" | ""+ beginAt+"" | ""+ endAt);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,144,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,145,    double startX = beginAt - (beginAt %1);
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,146,    double startY = beginAt - startX ; //should give a whole number
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,147,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,148,    double endX = endAt - (endAt %1);
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,149,    double endY = endAt -endX; //should give a whole number
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,150,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,151,    int scale = (int)Math.log10(tierVert);
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,152,"    endY = new BigDecimal(endY).setScale(scale, RoundingMode.HALF_EVEN).doubleValue();"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,153,"    startY = new BigDecimal(startY).setScale(scale, RoundingMode.HALF_EVEN).doubleValue();"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,154,    double xInc = 1.0d / tierVert;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,155,"    xInc = new BigDecimal(xInc).setScale(scale, RoundingMode.HALF_EVEN).doubleValue();"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,156,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,157,"    //System.err.println(""go from startX:""+startX+"" to:"" + endX);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,158,    for (; startX <= endX; startX++){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,159,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,160,      double itY = startY;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,161,"      //System.err.println(""go from startY:""+startY+"" to:"" + endY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,162,      while (itY <= endY){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,163,        //create a boxId
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,164,        // startX.startY
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,165,        double boxId = startX + itY ;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,167,"        //System.err.println(""----""+startX+"" and ""+itY);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,168,"        //System.err.println(""----""+boxId);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,169,        itY += xInc;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,170,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,171,        // java keeps 0.0001 as 1.0E-1
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,172,        // which ends up as 0.00011111
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,173,"        itY = new BigDecimal(itY).setScale(scale, RoundingMode.HALF_EVEN).doubleValue();"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,176,    return shape;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,182,"    return new CartesianShapeFilter(shape, shape.getTierId());"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/Shape.java,32,  private String tierId;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/Shape.java,34,  public Shape (String tierId){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/Shape.java,46,  public String getTierId(){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,136,  public int bestFit(double miles){
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,137,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,138,"    //28,892 a rough circumference of the earth"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,139,    int circ = 28892;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,140,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,141,    double r = miles / 2.0;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,142,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,143,"    double corner = r - Math.sqrt(Math.pow(r, 2) / 2.0d);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,144,    double times = circ / corner;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,145,    int bestFit =  (int)Math.ceil(log2(times)) + 1;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,146,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,156,   * a log to the base 2 formula
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,157,   * <code>Math.log(value) / Math.log(2)</code>
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,160,  public double log2(double value) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,161,
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,162,    return Math.log(value) / Math.log(2);
lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian.java,365,"    assertEquals(18, distances.size()); // fixed a store of only needed distances"
lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian.java,366,"    assertEquals(18, results);"
lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesianShapeFilter.java,33,"    CartesianShapeFilter filter = new CartesianShapeFilter(new Shape(""1""),"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,72,"    CartesianTierPlotter ctp = new CartesianTierPlotter( miles, projector, tierPrefix );"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,52,      String fieldPrefix) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,53,"    this(CartesianTierPlotter.bestFit(radius), projector, fieldPrefix);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,146,"    return bestFit(range, DistanceUnits.MILES);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,149,"  static public int bestFit(double range, DistanceUnits distanceUnit) {"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,154,    if (bestFit > 15) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,155,      // 15 is the granularity of about 1 mile
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,156,      // finer granularity isn't accurate with standard java math
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,157,      return 15;
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java,72,"    CartesianTierPlotter ctp = new CartesianTierPlotter( miles, projector, tierPrefix, minTier, maxTier );"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,53,"  public CartesianTierPlotter(double radius, IProjector projector,"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,54,"      String fieldPrefix, int minTier, int maxTier) {"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,55,"    this(CartesianTierPlotter.bestFit(radius, minTier, maxTier), projector, fieldPrefix);"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,56,  }
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,147,  static public int bestFit(double range) {
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,151,"  static public int bestFit(double range, int minTier, int maxTier) {"
lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter.java,155,"  static public int bestFit(double range, int minTier, int maxTier, DistanceUnits distanceUnit) {"
solr/src/test/org/apache/solr/schema/PolyFieldTest.java,218,"    assertQ(req(""fl"", ""*,score"", ""q"", qry.toString()),"
lucene/src/java/org/apache/lucene/index/DocumentsWriter.java,1320,        for(int i=start;i<end;i++)
lucene/src/java/org/apache/lucene/index/DocumentsWriter.java,1329,        for(int i=0;i<size;i++)
lucene/src/java/org/apache/lucene/index/DocumentsWriter.java,1331,  }
lucene/src/java/org/apache/lucene/index/DocumentsWriter.java,1361,    for(int i=start;i<end;i++)
lucene/src/java/org/apache/lucene/index/IndexWriter.java,3627,"      return doFlushInternal(flushDocStores, flushDeletes);"
lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter.java,193,      perDoc.perDocTvf.reset();
lucene/src/java/org/apache/lucene/search/CachingWrapperFilter.java,56,    if (docIdSet.isCacheable()) {
lucene/src/java/org/apache/lucene/index/DocumentsWriter.java,827,      final DocWriter perDoc = state.consumer.processDocument();
lucene/src/java/org/apache/lucene/index/DocumentsWriter.java,828,
lucene/src/java/org/apache/lucene/index/TermsHashPerField.java,101,    // Cannot use ArrayUtil.shrink because we require power
lucene/src/java/org/apache/lucene/index/TermsHashPerField.java,102,    // of 2:
lucene/src/java/org/apache/lucene/index/TermsHashPerField.java,103,    int newSize = postingsHash.length;
lucene/src/java/org/apache/lucene/index/TermsHashPerField.java,104,    while(newSize >= 8 && newSize/4 > targetSize) {
lucene/src/java/org/apache/lucene/index/TermsHashPerField.java,105,      newSize /= 2;
lucene/src/java/org/apache/lucene/index/TermsHashPerField.java,106,    }
lucene/src/java/org/apache/lucene/index/TermsHashPerField.java,107,
lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java,114,    /** Returns last doc that was collected when the search time exceeded. */
lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java,203,"        //System.out.println(this+""  greedy: before failing, collecting doc: ""+doc+""  ""+(time-t0));"
lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java,206,"      //System.out.println(this+""  failing on:  ""+doc+""  ""+(time-t0));"
lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java,207,"      throw new TimeExceededException( timeout-t0, time-t0, doc );"
lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java,209,"    //System.out.println(this+""  collecting: ""+doc+""  ""+(time-t0));"
lucene/contrib/demo/src/java/org/apache/lucene/demo/FileDocument.java,43,       throws java.io.FileNotFoundException {
lucene/contrib/demo/src/java/org/apache/lucene/demo/FileDocument.java,61,    // Note that FileReader expects the file to be in the system's default encoding.
lucene/contrib/demo/src/java/org/apache/lucene/demo/FileDocument.java,63,"    doc.add(new Field(""contents"", new FileReader(f)));"
lucene/contrib/demo/src/java/org/apache/lucene/demo/HTMLDocument.java,67,    HTMLParser parser = new HTMLParser(fis);
lucene/contrib/demo/src/java/org/apache/lucene/demo/SearchFiles.java,127,      in = new BufferedReader(new FileReader(queries));
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,43,  /**
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,44,   * @deprecated Use HTMLParser(FileInputStream) instead
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,45,   */
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,46,  @Deprecated
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,47,  public HTMLParser(File file) throws FileNotFoundException {
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,48,    this(new FileInputStream(file));
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,49,  }
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,50,
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,234,   String tagName = t1.image.toLowerCase();
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,271,                currentMetaTag=t2.image.toLowerCase();
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,279,                currentMetaContent=t2.image.toLowerCase();
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,457,  private boolean jj_3_1() {
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,458,    if (jj_scan_token(ArgQuote1)) return true;
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,459,    if (jj_scan_token(CloseQuote1)) return true;
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,460,    return false;
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,461,  }
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser.java,462,
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,471,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,479,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,573,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,670,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,764,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,887,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,1053,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,1194,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,1201,                  if ((jjbitVec0[i2] & l2) != 0L)
lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParserTokenManager.java,1347,                  if ((jjbitVec0[i2] & l2) == 0L)
lucene/src/java/org/apache/lucene/util/AttributeSource.java,134,  public AttributeFactory getAttributeFactory() {
lucene/src/java/org/apache/lucene/util/AttributeSource.java,141,  public Iterator<Class<? extends Attribute>> getAttributeClassesIterator() {
lucene/src/java/org/apache/lucene/util/AttributeSource.java,149,  public Iterator<AttributeImpl> getAttributeImplsIterator() {
lucene/src/java/org/apache/lucene/index/CheckIndex.java,558,"      msg(""No problems were detected with this index.\n"");"
lucene/src/java/org/apache/lucene/store/Directory.java,227,    IndexOutput os = to.createOutput(dest);
lucene/src/java/org/apache/lucene/store/Directory.java,228,    IndexInput is = openInput(src);
lucene/src/test-framework/java/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,249,
lucene/src/test-framework/java/org/apache/lucene/analysis/BaseTokenStreamTestCase.java,257,"      switch(_TestUtil.nextInt(random, 0, 3)) {"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,31,import org.apache.lucene.util.LuceneTestCase;
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,33,public class HTMLStripCharFilterTest extends LuceneTestCase {
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,34,
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,35,  @Override
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,36,  public void setUp() throws Exception {
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,37,    super.setUp();
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,38,  }
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,39,
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,40,  @Override
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,41,  public void tearDown() throws Exception {
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,42,    super.tearDown();
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,43,  }
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,68,"    assertTokenStreamContents(ts, new String[]{""x""}, new int[]{0}, new int[]{1});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,74,"    assertTokenStreamContents(ts, new String[]{""i""}, new int[]{0}, new int[]{1});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,80,"    assertTokenStreamContents(ts, new String[]{""jj""}, new int[]{0}, new int[]{1});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,86,"    assertTokenStreamContents(ts, new String[]{""kkk""}, new int[]{0}, new int[]{1});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,92,"    assertTokenStreamContents(ts, new String[]{""llll""}, new int[]{0}, new int[]{2});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,98,"    assertTokenStreamContents(ts, new String[]{""a""}, new int[]{0}, new int[]{2});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,104,"    assertTokenStreamContents(ts, new String[]{""b""}, new int[]{0}, new int[]{3});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,110,"    assertTokenStreamContents(ts, new String[]{""cc""}, new int[]{0}, new int[]{4});"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,116,"    assertTokenStreamContents(ts, new String[0]);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,138,"    CharStream cs = new MappingCharFilter( normMap, CharReader.get( new StringReader( ""h i j k ll cccc bbb aa"" ) ) );"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,143,"      new int[]{1,3,5,7,10,15,19,22}"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,159,"        new MappingCharFilter( normMap, CharReader.get( new StringReader( ""aaaa ll h"" ) ) ) );"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java,164,"      new int[]{4,7,9}"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,46,"        new int[] { 4, 7, 13 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,70,        new int[] { 8 });
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,85,"        new int[] { 8, 11 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,99,"        new int[] { 2, 5 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,114,"        new int[] { 11, 14 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,129,"        new int[] { 4, 8, 10, 14, 17, 20, 23, 27, 33 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,144,"        new int[] { 7, 10, 14, 20, 24, 27, 35, 38 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java,161,"        new int[] { 2, 5, 7, 11, 13, 17, 20, 22, 24, 28, 32, 35 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternTokenizer.java,87,"        new int[] { 12, 25, 28, 33 });"
modules/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternTokenizer.java,94,"        new int[] { 12, 25 });"
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,252,  // TODO: make this more evil
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,261,      int val = random.nextInt(10);
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,264,"        case 1: sb.append(""</p>""); break;"
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,265,"        case 2: sb.append(""<!--""); break;"
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,266,"        case 3: sb.append(""-->""); break;"
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,267,"        case 4: sb.append(""&#""); break;"
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,268,"        case 5: sb.append("";""); break;"
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,269,"        case 6: sb.append((char)_TestUtil.nextInt(random, '0', '9')); break;"
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,270,        default:
lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil.java,271,"          sb.append((char)_TestUtil.nextInt(random, 'a', 'z'));"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter.java,83,    offsets[size] = off;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter.java,84,    diffs[size++] = cumulativeDiff;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,20,import java.io.BufferedReader;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,22,import java.io.InputStreamReader;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,23,import java.io.Reader;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,24,import java.util.HashMap;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,27,import org.apache.lucene.analysis.charfilter.BaseCharFilter;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,28,import org.apache.lucene.analysis.CharReader;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,34,public class HTMLStripCharFilter extends BaseCharFilter {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,35,  private int readAheadLimit = DEFAULT_READ_AHEAD;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,36,  private int safeReadAheadLimit = readAheadLimit - 3;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,37,  private int numWhitespace = 0;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,38,  private int numRead = 0;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,39,  private int numEaten = 0;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,40,  private int numReturned = 0;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,41,  private int lastMark;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,42,  private Set<String> escapedTags;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,43,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,44,  // pushback buffer
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,45,  private final StringBuilder pushed = new StringBuilder();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,46,  private static final int EOF=-1;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,47,  private static final int MISMATCH=-2;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,48,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,49,  private static final int MATCH=-3;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,50,  // temporary buffer
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,51,  private final StringBuilder sb = new StringBuilder();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,52,  public static final int DEFAULT_READ_AHEAD = 8192;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,53,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,54,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,55,  public static void main(String[] args) throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,56,    Reader in = new HTMLStripCharFilter(
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,57,            CharReader.get(new InputStreamReader(System.in)));
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,58,    int ch;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,59,    while ( (ch=in.read()) != -1 ) System.out.print((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,60,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,62,  public HTMLStripCharFilter(CharStream source) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,63,    super(source.markSupported() ? source : CharReader.get(new BufferedReader(source)));
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,64,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,66,"  public HTMLStripCharFilter(CharStream source, Set<String> escapedTags){"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,67,    this(source);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,68,    this.escapedTags = escapedTags;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,69,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,71,"  public HTMLStripCharFilter(CharStream source, Set<String> escapedTags, int readAheadLimit){"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,72,    this(source);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,73,    this.escapedTags = escapedTags;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,74,    this.readAheadLimit = readAheadLimit;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,75,    safeReadAheadLimit = readAheadLimit - 3;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,76,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,78,  public int getReadAheadLimit() {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,79,    return readAheadLimit;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,82,  private int next() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,83,    int len = pushed.length();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,84,    if (len>0) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,85,      int ch = pushed.charAt(len-1);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,86,      pushed.setLength(len-1);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,87,      return ch;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,89,    numRead++;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,90,    return input.read();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,93,  private int nextSkipWS() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,94,    int ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,95,    while(isSpace(ch)) ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,96,    return ch;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,99,  private int peek() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,100,    int len = pushed.length();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,101,    if (len>0) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,102,      return pushed.charAt(len-1);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,104,    numRead++;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,105,    int ch = input.read();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,106,    push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,107,    return ch;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,110,  private void push(int ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,111,    pushed.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,112,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,115,  private boolean isSpace(int ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,116,    switch (ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,117,      case ' ':
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,118,      case '\n':
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,119,      case '\r':
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,120,      case '\t': return true;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,121,      default: return false;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,122,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,123,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,125,  private boolean isHex(int ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,126,    return (ch>='0' && ch<='9') ||
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,127,           (ch>='A' && ch<='F') ||
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,128,           (ch>='a' && ch<='f');
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,129,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,131,  private boolean isAlpha(int ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,132,    return ch>='a' && ch<='z' || ch>='A' && ch<='Z';
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,133,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,135,  private boolean isDigit(int ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,136,    return ch>='0' && ch<='9';
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,137,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,139,/*** From HTML 4.0
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,140,[4]     NameChar     ::=    Letter | Digit | '.' | '-' | '_' | ':' | CombiningChar | Extender
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,141,[5]     Name     ::=    (Letter | '_' | ':') (NameChar)*
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,142,[6]     Names    ::=    Name (#x20 Name)*
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,143,[7]     Nmtoken    ::=    (NameChar)+
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,144,[8]     Nmtokens     ::=    Nmtoken (#x20 Nmtoken)*
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,145,***/
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,146,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,147,  // should I include all id chars allowable by HTML/XML here?
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,148,"  // including accented chars, ':', etc?"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,149,  private boolean isIdChar(int ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,150,    // return Character.isUnicodeIdentifierPart(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,151,    // isUnicodeIdentiferPart doesn't include '-'... shoudl I still
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,152,"    // use it and add in '-',':',etc?"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,153,    return isAlpha(ch) || isDigit(ch) || ch=='.' ||
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,154,            ch=='-' || ch=='_' || ch==':'
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,155,            || Character.isLetter(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,157,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,159,  private boolean isFirstIdChar(int ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,160,    return Character.isUnicodeIdentifierStart(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,161,    // return isAlpha(ch) || ch=='_' || Character.isLetter(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,162,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,165,  private void saveState() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,166,    lastMark = numRead;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,167,    input.mark(readAheadLimit);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,168,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,170,  private void restoreState() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,171,    input.reset();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,172,    pushed.setLength(0);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,173,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,175,  private int readNumericEntity() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,176,"    // ""&#"" has already been read at this point"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,177,    int eaten = 2;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,178,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,179,"    // is this decimal, hex, or nothing at all."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,180,    int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,181,    int base=10;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,182,    boolean invalid=false;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,183,    sb.setLength(0);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,184,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,185,    if (isDigit(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,186,      // decimal character entity
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,187,      sb.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,188,      for (int i=0; i<10; i++) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,189,        ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,190,        if (isDigit(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,191,          sb.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,192,        } else {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,193,          break;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,194,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,195,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,196,    } else if (ch=='x') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,197,      eaten++;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,198,      // hex character entity
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,199,      base=16;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,200,      sb.setLength(0);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,201,      for (int i=0; i<10; i++) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,202,        ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,203,        if (isHex(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,204,          sb.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,205,        } else {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,206,          break;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,207,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,208,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,209,    } else {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,210,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,211,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,214,"    // In older HTML, an entity may not have always been terminated"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,215,    // with a semicolon.  We'll also treat EOF or whitespace as terminating
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,216,    // the entity.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,217,    try {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,218,      if (ch==';' || ch==-1) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,219,"        // do not account for the eaten "";"" due to the fact that we do output a char"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,220,        numWhitespace = sb.length() + eaten;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,221,"        return Integer.parseInt(sb.toString(), base);"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,222,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,224,"      // if whitespace terminated the entity, we need to return"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,225,      // that whitespace on the next call to read().
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,226,      if (isSpace(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,227,        push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,228,        numWhitespace = sb.length() + eaten;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,229,"        return Integer.parseInt(sb.toString(), base);"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,230,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,231,    } catch (NumberFormatException e) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,232,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,233,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,235,    // Not an entity...
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,236,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,239,  private int readEntity() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,240,    int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,241,    if (ch=='#') return readNumericEntity();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,243,    //read an entity reference
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,245,"    // for an entity reference, require the ';' for safety."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,246,    // otherwise we may try and convert part of some company
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,247,"    // names to an entity.  ""Alpha&Beta Corp"" for instance."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,248,    //
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,249,    // TODO: perhaps I should special case some of the
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,250,    // more common ones like &amp to make the ';' optional...
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,252,    sb.setLength(0);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,253,    sb.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,255,    for (int i=0; i< safeReadAheadLimit; i++) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,256,      ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,257,      if (Character.isLetter(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,258,        sb.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,259,      } else {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,260,        break;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,261,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,262,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,264,    if (ch==';') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,265,      String entity=sb.toString();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,266,      Character entityChar = entityTable.get(entity);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,267,      if (entityChar!=null) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,268,        numWhitespace = entity.length() + 1 ;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,269,        return entityChar.charValue();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,270,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,271,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,273,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,276,  /*** valid comments according to HTML specs
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,277,   <!-- Hello -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,278,   <!-- Hello -- -- Hello-->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,279,   <!---->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,280,   <!------ Hello -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,281,   <!>
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,282,   <!------> Hello -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,284,   #comments inside of an entity decl:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,285,"   <!ENTITY amp     CDATA ""&#38;""   -- ampersand, U+0026 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,287,"   Turns out, IE & mozilla don't parse comments correctly."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,288,"   Since this is meant to be a practical stripper, I'll just"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,289,   try and duplicate what the browsers do.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,291,   <!-- (stuff_including_markup)* -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,292,"   <!FOO (stuff, not including markup) >"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,293,"   <! (stuff, not including markup)* >"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,296,  ***/
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,298,  private int readBang(boolean inScript) throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,299,"    // at this point, ""<!"" has been read"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,300,    int ret = readComment(inScript);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,301,    if (ret==MATCH) return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,303,    if ((numRead - lastMark) < safeReadAheadLimit || peek() == '>' ) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,305,      int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,306,      if (ch=='>') return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,308,"      // if it starts with <! and isn't a comment,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,309,"      // simply read until "">"""
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,310,"      //since we did readComment already, it may be the case that we are already deep into the read ahead buffer"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,311,"      //so, we may need to abort sooner"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,312,      while ((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,313,        ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,314,        if (ch=='>') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,315,          return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,316,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,317,        else if (ch<0) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,318,          return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,319,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,322,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,325,"  // tries to read comments the way browsers do, not"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,326,  // strictly by the standards.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,327,  //
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,328,"  // GRRRR.  it turns out that in the wild, a <script> can have a HTML comment"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,329,  // that contains a script that contains a quoted comment.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,330,"  // <script><!-- document.write(""<!--embedded comment-->"") --></script>"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,331,  //
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,332,  private int readComment(boolean inScript) throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,333,"    // at this point ""<!"" has  been read"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,334,    int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,335,      if (ch!='-') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,336,      // not a comment
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,337,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,338,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,339,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,341,    ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,342,      if (ch!='-') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,343,      // not a comment
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,344,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,345,      push('-');
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,346,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,347,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,348,"    /*two extra calls to next() here, so make sure we don't read past our mark*/"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,349,    while ((numRead - lastMark) < safeReadAheadLimit -3 ) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,350,      ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,351,      if (ch<0) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,352,      if (ch=='-') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,353,        ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,354,        if (ch<0) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,355,        if (ch!='-') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,356,          push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,357,          continue;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,358,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,360,        ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,361,        if (ch<0) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,362,        if (ch!='>') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,363,          push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,364,          push('-');
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,365,          continue;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,368,        return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,369,"      } else if ((ch=='\'' || ch=='""') && inScript) {"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,370,        push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,371,        int ret=readScriptString();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,372,"        // if this wasn't a string, there's not much we can do"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,373,        // at this point without having a stack of stream states in
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,374,"        // order to ""undo"" just the latest."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,375,      } else if (ch=='<') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,376,        eatSSI();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,380,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,386,  private int readTag() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,387,    // at this point '<' has already been read
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,388,    int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,389,    if (!isAlpha(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,390,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,391,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,394,    sb.setLength(0);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,395,    sb.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,396,    while((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,397,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,398,      ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,399,      if (isIdChar(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,400,        sb.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,401,      } else if (ch=='/') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,402,"        // Hmmm, a tag can close with ""/>"" as well as ""/ >"""
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,403,"        // read end tag '/>' or '/ >', etc"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,404,        return nextSkipWS()=='>' ? MATCH : MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,405,      } else {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,406,        break;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,407,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,409,    if (escapedTags!=null && escapedTags.contains(sb.toString())){
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,410,"      //if this is a reservedTag, then keep it"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,411,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,412,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,413,"    // After the tag id, there needs to be either whitespace or"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,414,    // '>'
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,415,    if ( !(ch=='>' || isSpace(ch)) ) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,416,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,419,    if (ch!='>') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,420,      // process attributes
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,421,      while ((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,422,        ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,423,        if (isSpace(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,424,          continue;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,425,        } else if (isFirstIdChar(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,426,          push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,427,          int ret = readAttr2();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,428,          if (ret==MISMATCH) return ret;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,429,        } else if (ch=='/') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,430,"          // read end tag '/>' or '/ >', etc"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,431,          return nextSkipWS()=='>' ? MATCH : MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,432,        } else if (ch=='>') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,433,          break;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,434,        } else {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,435,          return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,436,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,438,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,439,      if ((numRead - lastMark) >= safeReadAheadLimit){
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,440,        return MISMATCH;//exit out if we exceeded the buffer
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,441,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,444,    // We only get to this point after we have read the
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,445,    // entire tag.  Now let's see if it's a special tag.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,446,    String name=sb.toString();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,447,"    if (name.equalsIgnoreCase(""script"") || name.equalsIgnoreCase(""style"")) {"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,448,     // The content of script and style elements is
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,449,     //  CDATA in HTML 4 but PCDATA in XHTML.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,450,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,451,     /* From HTML4:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,452,"       Although the STYLE and SCRIPT elements use CDATA for their data model,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,453,"       for these elements, CDATA must be handled differently by user agents."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,454,       Markup and entities must be treated as raw text and passed to the application
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,455,"       as is. The first occurrence of the character sequence ""</"" (end-tag open"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,456,       delimiter) is treated as terminating the end of the element's content. In
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,457,"       valid documents, this would be the end tag for the element."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,458,      */
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,459,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,460,     // discard everything until endtag is hit (except
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,461,     // if it occurs in a comment.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,462,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,463,"     // reset the stream mark to here, since we know that we sucessfully matched"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,464,"     // a tag, and if we can't find the end tag, this is where we will want"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,465,     // to roll back to.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,466,     saveState();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,467,     pushed.setLength(0);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,468,     return findEndTag();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,470,    return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,474,"  // find an end tag, but beware of comments..."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,475,  // <script><!-- </script> -->foo</script>
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,476,"  // beware markup in script strings: </script>...document.write(""</script>"")foo</script>"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,477,"  // TODO: do I need to worry about CDATA sections ""<![CDATA[""  ?"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,478,  int findEndTag() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,479,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,480,    while ((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,481,      int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,482,      if (ch=='<') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,483,        ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,484,        // skip looking for end-tag in comments
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,485,        if (ch=='!') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,486,          int ret = readBang(true);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,487,          if (ret==MATCH) continue;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,488,"          // yikes... what now?  It wasn't a comment, but I can't get"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,489,          // back to the state I was at.  Just continue from where I
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,490,          // am I guess...
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,491,          continue;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,492,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,493,"        // did we match ""</"""
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,494,        if (ch!='/') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,495,          push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,496,          continue;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,497,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,498,        int ret = readName(false);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,499,        if (ret==MISMATCH) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,500,        ch=nextSkipWS();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,501,        if (ch!='>') return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,502,        return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,503,"      } else if (ch=='\'' || ch=='""') {"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,504,        // read javascript string to avoid a false match.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,505,        push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,506,        int ret = readScriptString();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,507,        // what to do about a non-match (non-terminated string?)
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,508,        // play it safe and index the rest of the data I guess...
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,509,        if (ret==MISMATCH) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,510,      } else if (ch<0) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,511,        return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,512,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,515,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,519,  // read a string escaped by backslashes
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,520,  private int readScriptString() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,521,    int quoteChar = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,522,"    if (quoteChar!='\'' && quoteChar!='""') return MISMATCH;"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,523,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,524,    while((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,525,      int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,526,      if (ch==quoteChar) return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,527,      else if (ch=='\\') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,528,        ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,529,      } else if (ch<0) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,530,        return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,531,      } else if (ch=='<') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,532,        eatSSI();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,533,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,535,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,536,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,537,  }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,540,  private int readName(boolean checkEscaped) throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,541,    StringBuilder builder = (checkEscaped && escapedTags!=null) ? new StringBuilder() : null;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,542,    int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,543,    if (builder!=null) builder.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,544,    if (!isFirstIdChar(ch)) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,545,    ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,546,    if (builder!=null) builder.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,547,    while(isIdChar(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,548,      ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,549,      if (builder!=null) builder.append((char)ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,551,    if (ch!=-1) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,552,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,555,    //strip off the trailing >
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,556,"    if (builder!=null && escapedTags.contains(builder.substring(0, builder.length() - 1))){"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,557,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,559,    return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,562,  /***
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,563,"  [10]    AttValue     ::=    '""' ([^<&""] | Reference)* '""'"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,564,"        |  ""'"" ([^<&'] | Reference)* ""'"""
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,565,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,566,"  need to also handle unquoted attributes, and attributes w/o values:"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,567,"  <td id=msviGlobalToolbar height=""22"" nowrap align=left>"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,568,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,569,  ***/
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,570,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,571,    // This reads attributes and attempts to handle any
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,572,    // embedded server side includes that would otherwise
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,573,    // mess up the quote handling.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,574,"    //  <a href=""a/<!--#echo ""path""-->"">"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,575,    private int readAttr2() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,576,    if ((numRead - lastMark < safeReadAheadLimit)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,577,      int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,578,      if (!isFirstIdChar(ch)) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,579,      ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,580,      while(isIdChar(ch) && ((numRead - lastMark) < safeReadAheadLimit)){
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,581,        ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,582,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,583,      if (isSpace(ch)) ch = nextSkipWS();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,585,      // attributes may not have a value at all!
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,586,      // if (ch != '=') return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,587,      if (ch != '=') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,588,        push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,589,        return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,590,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,592,      int quoteChar = nextSkipWS();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,594,"      if (quoteChar=='""' || quoteChar=='\'') {"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,595,        while ((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,596,          ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,597,          if (ch<0) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,598,          else if (ch=='<') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,599,            eatSSI();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,600,          }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,601,          else if (ch==quoteChar) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,602,            return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,603,          //} else if (ch=='<') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,604,          //  return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,605,          }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,607,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,608,      } else {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,609,        // unquoted attribute
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,610,        while ((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,611,          ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,612,          if (ch<0) return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,613,          else if (isSpace(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,614,            push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,615,            return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,616,          } else if (ch=='>') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,617,            push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,618,            return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,619,          } else if (ch=='<') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,620,            eatSSI();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,621,          }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,623,        }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,624,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,625,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,626,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,629,  // skip past server side include
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,630,  private int eatSSI() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,631,"    // at this point, only a ""<"" was read."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,632,"    // on a mismatch, push back the last char so that if it was"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,633,"    // a quote that closes the attribute, it will be re-read and matched."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,634,    int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,635,    if (ch!='!') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,636,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,637,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,638,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,639,    ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,640,    if (ch!='-') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,641,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,642,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,643,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,644,    ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,645,    if (ch!='-') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,646,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,647,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,648,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,649,    ch=next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,650,    if (ch!='#') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,651,      push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,652,      return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,653,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,655,    push('#'); push('-'); push('-');
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,656,    return readComment(false);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,659,  private int readProcessingInstruction() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,660,"    // ""<?"" has already been read"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,661,    while ((numRead - lastMark) < safeReadAheadLimit) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,662,      int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,663,      if (ch=='?' && peek()=='>') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,664,        next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,665,        return MATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,666,      } else if (ch==-1) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,667,        return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,668,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,670,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,671,    return MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,676,  @Override
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,677,  public int read() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,678,    // TODO: Do we ever want to preserve CDATA sections?
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,679,    // where do we have to worry about them?
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,680,    // <![ CDATA [ unescaped markup ]]>
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,681,    if (numWhitespace > 0){
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,682,      numEaten += numWhitespace;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,683,"      addOffCorrectMap(numReturned, numEaten);"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,684,      numWhitespace = 0;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,685,    }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,686,    numReturned++;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,687,    //do not limit this one by the READAHEAD
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,688,    while(true) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,689,      int lastNumRead = numRead;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,690,      int ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,691,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,692,      switch (ch) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,693,        case '&':
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,694,          saveState();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,695,          ch = readEntity();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,696,          if (ch>=0) return ch;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,697,          if (ch==MISMATCH) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,698,            restoreState();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,699,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,700,            return '&';
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,701,          }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,702,          break;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,703,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,704,        case '<':
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,705,          saveState();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,706,          ch = next();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,707,          int ret = MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,708,          if (ch=='!') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,709,            ret = readBang(false);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,710,          } else if (ch=='/') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,711,            ret = readName(true);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,712,            if (ret==MATCH) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,713,              ch=nextSkipWS();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,714,              ret= ch=='>' ? MATCH : MISMATCH;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,715,            }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,716,          } else if (isAlpha(ch)) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,717,            push(ch);
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,718,            ret = readTag();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,719,          } else if (ch=='?') {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,720,            ret = readProcessingInstruction();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,721,          }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,722,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,723,"          // matched something to be discarded, so break"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,724,          // from this case and continue in the loop
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,725,          if (ret==MATCH) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,726,            //break;//was
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,727,            //return whitespace from
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,728,            numWhitespace = (numRead - lastNumRead) - 1;//tack on the -1 since we are returning a space right now
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,729,            return ' ';
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,730,          }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,732,"          // didn't match any HTML constructs, so roll back"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,733,          // the stream state and just return '<'
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,734,          restoreState();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,735,          return '<';
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,737,        default: return ch;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,738,      }
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,745,  @Override
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,746,"  public int read(char cbuf[], int off, int len) throws IOException {"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,747,    int i=0;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,748,    for (i=0; i<len; i++) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,749,      int ch = read();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,750,      if (ch==-1) break;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,751,      cbuf[off++] = (char)ch;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,753,    if (i==0) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,754,      if (len==0) return 0;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,755,      return -1;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,757,    return i;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,760,  @Override
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,761,  public void close() throws IOException {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,762,    input.close();
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,766,"  private static final HashMap<String,Character> entityTable;"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,767,  static {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,768,"    entityTable = new HashMap<String,Character>();"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,769,    // entityName and entityVal generated from the python script
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,770,    // included in comments at the end of this file.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,771,"    final String[] entityName={ ""zwnj"",""aring"",""gt"",""yen"",""ograve"",""Chi"",""delta"",""rang"",""sup"",""trade"",""Ntilde"",""xi"",""upsih"",""nbsp"",""Atilde"",""radic"",""otimes"",""aelig"",""oelig"",""equiv"",""ni"",""infin"",""Psi"",""auml"",""cup"",""Epsilon"",""otilde"",""lt"",""Icirc"",""Eacute"",""Lambda"",""sbquo"",""Prime"",""prime"",""psi"",""Kappa"",""rsaquo"",""Tau"",""uacute"",""ocirc"",""lrm"",""zwj"",""cedil"",""Alpha"",""not"",""amp"",""AElig"",""oslash"",""acute"",""lceil"",""alefsym"",""laquo"",""shy"",""loz"",""ge"",""Igrave"",""nu"",""Ograve"",""lsaquo"",""sube"",""euro"",""rarr"",""sdot"",""rdquo"",""Yacute"",""lfloor"",""lArr"",""Auml"",""Dagger"",""brvbar"",""Otilde"",""szlig"",""clubs"",""diams"",""agrave"",""Ocirc"",""Iota"",""Theta"",""Pi"",""zeta"",""Scaron"",""frac14"",""egrave"",""sub"",""iexcl"",""frac12"",""ordf"",""sum"",""prop"",""Uuml"",""ntilde"",""atilde"",""asymp"",""uml"",""prod"",""nsub"",""reg"",""rArr"",""Oslash"",""emsp"",""THORN"",""yuml"",""aacute"",""Mu"",""hArr"",""le"",""thinsp"",""dArr"",""ecirc"",""bdquo"",""Sigma"",""Aring"",""tilde"",""nabla"",""mdash"",""uarr"",""times"",""Ugrave"",""Eta"",""Agrave"",""chi"",""real"",""circ"",""eth"",""rceil"",""iuml"",""gamma"",""lambda"",""harr"",""Egrave"",""frac34"",""dagger"",""divide"",""Ouml"",""image"",""ndash"",""hellip"",""igrave"",""Yuml"",""ang"",""alpha"",""frasl"",""ETH"",""lowast"",""Nu"",""plusmn"",""bull"",""sup1"",""sup2"",""sup3"",""Aacute"",""cent"",""oline"",""Beta"",""perp"",""Delta"",""there4"",""pi"",""iota"",""empty"",""euml"",""notin"",""iacute"",""para"",""epsilon"",""weierp"",""OElig"",""uuml"",""larr"",""icirc"",""Upsilon"",""omicron"",""upsilon"",""copy"",""Iuml"",""Oacute"",""Xi"",""kappa"",""ccedil"",""Ucirc"",""cap"",""mu"",""scaron"",""lsquo"",""isin"",""Zeta"",""minus"",""deg"",""and"",""tau"",""pound"",""curren"",""int"",""ucirc"",""rfloor"",""ensp"",""crarr"",""ugrave"",""exist"",""cong"",""theta"",""oplus"",""permil"",""Acirc"",""piv"",""Euml"",""Phi"",""Iacute"",""quot"",""Uacute"",""Omicron"",""ne"",""iquest"",""eta"",""rsquo"",""yacute"",""Rho"",""darr"",""Ecirc"",""Omega"",""acirc"",""sim"",""phi"",""sigmaf"",""macr"",""thetasym"",""Ccedil"",""ordm"",""uArr"",""forall"",""beta"",""fnof"",""rho"",""micro"",""eacute"",""omega"",""middot"",""Gamma"",""rlm"",""lang"",""spades"",""supe"",""thorn"",""ouml"",""or"",""raquo"",""part"",""sect"",""ldquo"",""hearts"",""sigma"",""oacute""};"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,772,"    final char[] entityVal={ 8204,229,62,165,242,935,948,9002,8835,8482,209,958,978,160,195,8730,8855,230,339,8801,8715,8734,936,228,8746,917,245,60,206,201,923,8218,8243,8242,968,922,8250,932,250,244,8206,8205,184,913,172,38,198,248,180,8968,8501,171,173,9674,8805,204,957,210,8249,8838,8364,8594,8901,8221,221,8970,8656,196,8225,166,213,223,9827,9830,224,212,921,920,928,950,352,188,232,8834,161,189,170,8721,8733,220,241,227,8776,168,8719,8836,174,8658,216,8195,222,255,225,924,8660,8804,8201,8659,234,8222,931,197,732,8711,8212,8593,215,217,919,192,967,8476,710,240,8969,239,947,955,8596,200,190,8224,247,214,8465,8211,8230,236,376,8736,945,8260,208,8727,925,177,8226,185,178,179,193,162,8254,914,8869,916,8756,960,953,8709,235,8713,237,182,949,8472,338,252,8592,238,933,959,965,169,207,211,926,954,231,219,8745,956,353,8216,8712,918,8722,176,8743,964,163,164,8747,251,8971,8194,8629,249,8707,8773,952,8853,8240,194,982,203,934,205,34,218,927,8800,191,951,8217,253,929,8595,202,937,226,8764,966,962,175,977,199,186,8657,8704,946,402,961,181,233,969,183,915,8207,9001,9824,8839,254,246,8744,187,8706,167,8220,9829,963,243};"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,773,    for (int i=0; i<entityName.length; i++) {
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,774,"      entityTable.put(entityName[i], new Character(entityVal[i]));"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,776,    // special-case nbsp to a simple space instead of 0xa0
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,777,"    entityTable.put(""nbsp"",new Character(' '));"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,780,}
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,782,/********************* htmlentity.py **********************
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,783,# a simple python script to generate an HTML entity table
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,784,# from text taken from http://www.w3.org/TR/REC-html40/sgml/entities.html
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,785,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,786,"text="""""""
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,787,24 Character entity references in HTML 4
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,788,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,789,Contents
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,790,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,791,   1. Introduction to character entity references
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,792,   2. Character entity references for ISO 8859-1 characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,793,         1. The list of characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,794,"   3. Character entity references for symbols, mathematical symbols, and Greek letters"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,795,         1. The list of characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,796,   4. Character entity references for markup-significant and internationalization characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,797,         1. The list of characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,798,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,799,24.1 Introduction to character entity references
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,800,A character entity reference is an SGML construct that references a character of the document character set.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,801,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,802,This version of HTML supports several sets of character entity references:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,803,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,804,"    * ISO 8859-1 (Latin-1) characters In accordance with section 14 of [RFC1866], the set of Latin-1 entities has been extended by this specification to cover the whole right part of ISO-8859-1 (all code positions with the high-order bit set), including the already commonly used &nbsp;, &copy; and &reg;. The names of the entities are taken from the appendices of SGML (defined in [ISO8879])."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,805,"    * symbols, mathematical symbols, and Greek letters. These characters may be represented by glyphs in the Adobe font ""Symbol""."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,806,"    * markup-significant and internationalization characters (e.g., for bidirectional text)."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,807,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,808,"The following sections present the complete lists of character entity references. Although, by convention, [ISO10646] the comments following each entry are usually written with uppercase letters, we have converted them to lowercase in this specification for reasons of readability."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,809,24.2 Character entity references for ISO 8859-1 characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,810,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,811,"The character entity references in this section produce characters whose numeric equivalents should already be supported by conforming HTML 2.0 user agents. Thus, the character entity reference &divide; is a more convenient form than &#247; for obtaining the division sign."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,812,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,813,"To support these named entities, user agents need only recognize the entity names and convert them to characters that lie within the repertoire of [ISO88591]."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,814,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,815,Character 65533 (FFFD hexadecimal) is the last valid character in UCS-2. 65534 (FFFE hexadecimal) is unassigned and reserved as the byte-swapped version of ZERO WIDTH NON-BREAKING SPACE for byte-order detection purposes. 65535 (FFFF hexadecimal) is unassigned.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,816,24.2.1 The list of characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,817,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,818,<!-- Portions (c) International Organization for Standardization 1986
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,819,     Permission to copy in any form is granted for use with
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,820,     conforming SGML systems and applications as defined in
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,821,"     ISO 8879, provided this notice is included in all copies."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,822,-->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,823,<!-- Character entity set. Typical invocation:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,824,     <!ENTITY % HTMLlat1 PUBLIC
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,825,"       ""-//W3C//ENTITIES Latin 1//EN//HTML"">"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,826,     %HTMLlat1;
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,827,-->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,828,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,829,"<!ENTITY nbsp   CDATA ""&#160;"" -- no-break space = non-breaking space,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,830,                                  U+00A0 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,831,"<!ENTITY iexcl  CDATA ""&#161;"" -- inverted exclamation mark, U+00A1 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,832,"<!ENTITY cent   CDATA ""&#162;"" -- cent sign, U+00A2 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,833,"<!ENTITY pound  CDATA ""&#163;"" -- pound sign, U+00A3 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,834,"<!ENTITY curren CDATA ""&#164;"" -- currency sign, U+00A4 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,835,"<!ENTITY yen    CDATA ""&#165;"" -- yen sign = yuan sign, U+00A5 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,836,"<!ENTITY brvbar CDATA ""&#166;"" -- broken bar = broken vertical bar,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,837,                                  U+00A6 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,838,"<!ENTITY sect   CDATA ""&#167;"" -- section sign, U+00A7 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,839,"<!ENTITY uml    CDATA ""&#168;"" -- diaeresis = spacing diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,840,                                  U+00A8 ISOdia -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,841,"<!ENTITY copy   CDATA ""&#169;"" -- copyright sign, U+00A9 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,842,"<!ENTITY ordf   CDATA ""&#170;"" -- feminine ordinal indicator, U+00AA ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,843,"<!ENTITY laquo  CDATA ""&#171;"" -- left-pointing double angle quotation mark"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,844,"                                  = left pointing guillemet, U+00AB ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,845,"<!ENTITY not    CDATA ""&#172;"" -- not sign, U+00AC ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,846,"<!ENTITY shy    CDATA ""&#173;"" -- soft hyphen = discretionary hyphen,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,847,                                  U+00AD ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,848,"<!ENTITY reg    CDATA ""&#174;"" -- registered sign = registered trade mark sign,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,849,                                  U+00AE ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,850,"<!ENTITY macr   CDATA ""&#175;"" -- macron = spacing macron = overline"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,851,"                                  = APL overbar, U+00AF ISOdia -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,852,"<!ENTITY deg    CDATA ""&#176;"" -- degree sign, U+00B0 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,853,"<!ENTITY plusmn CDATA ""&#177;"" -- plus-minus sign = plus-or-minus sign,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,854,                                  U+00B1 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,855,"<!ENTITY sup2   CDATA ""&#178;"" -- superscript two = superscript digit two"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,856,"                                  = squared, U+00B2 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,857,"<!ENTITY sup3   CDATA ""&#179;"" -- superscript three = superscript digit three"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,858,"                                  = cubed, U+00B3 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,859,"<!ENTITY acute  CDATA ""&#180;"" -- acute accent = spacing acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,860,                                  U+00B4 ISOdia -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,861,"<!ENTITY micro  CDATA ""&#181;"" -- micro sign, U+00B5 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,862,"<!ENTITY para   CDATA ""&#182;"" -- pilcrow sign = paragraph sign,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,863,                                  U+00B6 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,864,"<!ENTITY middot CDATA ""&#183;"" -- middle dot = Georgian comma"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,865,"                                  = Greek middle dot, U+00B7 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,866,"<!ENTITY cedil  CDATA ""&#184;"" -- cedilla = spacing cedilla, U+00B8 ISOdia -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,867,"<!ENTITY sup1   CDATA ""&#185;"" -- superscript one = superscript digit one,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,868,                                  U+00B9 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,869,"<!ENTITY ordm   CDATA ""&#186;"" -- masculine ordinal indicator,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,870,                                  U+00BA ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,871,"<!ENTITY raquo  CDATA ""&#187;"" -- right-pointing double angle quotation mark"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,872,"                                  = right pointing guillemet, U+00BB ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,873,"<!ENTITY frac14 CDATA ""&#188;"" -- vulgar fraction one quarter"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,874,"                                  = fraction one quarter, U+00BC ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,875,"<!ENTITY frac12 CDATA ""&#189;"" -- vulgar fraction one half"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,876,"                                  = fraction one half, U+00BD ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,877,"<!ENTITY frac34 CDATA ""&#190;"" -- vulgar fraction three quarters"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,878,"                                  = fraction three quarters, U+00BE ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,879,"<!ENTITY iquest CDATA ""&#191;"" -- inverted question mark"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,880,"                                  = turned question mark, U+00BF ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,881,"<!ENTITY Agrave CDATA ""&#192;"" -- latin capital letter A with grave"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,882,"                                  = latin capital letter A grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,883,                                  U+00C0 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,884,"<!ENTITY Aacute CDATA ""&#193;"" -- latin capital letter A with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,885,                                  U+00C1 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,886,"<!ENTITY Acirc  CDATA ""&#194;"" -- latin capital letter A with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,887,                                  U+00C2 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,888,"<!ENTITY Atilde CDATA ""&#195;"" -- latin capital letter A with tilde,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,889,                                  U+00C3 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,890,"<!ENTITY Auml   CDATA ""&#196;"" -- latin capital letter A with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,891,                                  U+00C4 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,892,"<!ENTITY Aring  CDATA ""&#197;"" -- latin capital letter A with ring above"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,893,"                                  = latin capital letter A ring,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,894,                                  U+00C5 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,895,"<!ENTITY AElig  CDATA ""&#198;"" -- latin capital letter AE"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,896,"                                  = latin capital ligature AE,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,897,                                  U+00C6 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,898,"<!ENTITY Ccedil CDATA ""&#199;"" -- latin capital letter C with cedilla,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,899,                                  U+00C7 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,900,"<!ENTITY Egrave CDATA ""&#200;"" -- latin capital letter E with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,901,                                  U+00C8 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,902,"<!ENTITY Eacute CDATA ""&#201;"" -- latin capital letter E with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,903,                                  U+00C9 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,904,"<!ENTITY Ecirc  CDATA ""&#202;"" -- latin capital letter E with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,905,                                  U+00CA ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,906,"<!ENTITY Euml   CDATA ""&#203;"" -- latin capital letter E with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,907,                                  U+00CB ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,908,"<!ENTITY Igrave CDATA ""&#204;"" -- latin capital letter I with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,909,                                  U+00CC ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,910,"<!ENTITY Iacute CDATA ""&#205;"" -- latin capital letter I with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,911,                                  U+00CD ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,912,"<!ENTITY Icirc  CDATA ""&#206;"" -- latin capital letter I with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,913,                                  U+00CE ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,914,"<!ENTITY Iuml   CDATA ""&#207;"" -- latin capital letter I with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,915,                                  U+00CF ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,916,"<!ENTITY ETH    CDATA ""&#208;"" -- latin capital letter ETH, U+00D0 ISOlat1 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,917,"<!ENTITY Ntilde CDATA ""&#209;"" -- latin capital letter N with tilde,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,918,                                  U+00D1 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,919,"<!ENTITY Ograve CDATA ""&#210;"" -- latin capital letter O with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,920,                                  U+00D2 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,921,"<!ENTITY Oacute CDATA ""&#211;"" -- latin capital letter O with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,922,                                  U+00D3 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,923,"<!ENTITY Ocirc  CDATA ""&#212;"" -- latin capital letter O with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,924,                                  U+00D4 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,925,"<!ENTITY Otilde CDATA ""&#213;"" -- latin capital letter O with tilde,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,926,                                  U+00D5 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,927,"<!ENTITY Ouml   CDATA ""&#214;"" -- latin capital letter O with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,928,                                  U+00D6 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,929,"<!ENTITY times  CDATA ""&#215;"" -- multiplication sign, U+00D7 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,930,"<!ENTITY Oslash CDATA ""&#216;"" -- latin capital letter O with stroke"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,931,"                                  = latin capital letter O slash,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,932,                                  U+00D8 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,933,"<!ENTITY Ugrave CDATA ""&#217;"" -- latin capital letter U with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,934,                                  U+00D9 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,935,"<!ENTITY Uacute CDATA ""&#218;"" -- latin capital letter U with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,936,                                  U+00DA ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,937,"<!ENTITY Ucirc  CDATA ""&#219;"" -- latin capital letter U with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,938,                                  U+00DB ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,939,"<!ENTITY Uuml   CDATA ""&#220;"" -- latin capital letter U with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,940,                                  U+00DC ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,941,"<!ENTITY Yacute CDATA ""&#221;"" -- latin capital letter Y with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,942,                                  U+00DD ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,943,"<!ENTITY THORN  CDATA ""&#222;"" -- latin capital letter THORN,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,944,                                  U+00DE ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,945,"<!ENTITY szlig  CDATA ""&#223;"" -- latin small letter sharp s = ess-zed,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,946,                                  U+00DF ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,947,"<!ENTITY agrave CDATA ""&#224;"" -- latin small letter a with grave"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,948,"                                  = latin small letter a grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,949,                                  U+00E0 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,950,"<!ENTITY aacute CDATA ""&#225;"" -- latin small letter a with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,951,                                  U+00E1 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,952,"<!ENTITY acirc  CDATA ""&#226;"" -- latin small letter a with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,953,                                  U+00E2 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,954,"<!ENTITY atilde CDATA ""&#227;"" -- latin small letter a with tilde,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,955,                                  U+00E3 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,956,"<!ENTITY auml   CDATA ""&#228;"" -- latin small letter a with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,957,                                  U+00E4 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,958,"<!ENTITY aring  CDATA ""&#229;"" -- latin small letter a with ring above"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,959,"                                  = latin small letter a ring,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,960,                                  U+00E5 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,961,"<!ENTITY aelig  CDATA ""&#230;"" -- latin small letter ae"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,962,"                                  = latin small ligature ae, U+00E6 ISOlat1 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,963,"<!ENTITY ccedil CDATA ""&#231;"" -- latin small letter c with cedilla,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,964,                                  U+00E7 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,965,"<!ENTITY egrave CDATA ""&#232;"" -- latin small letter e with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,966,                                  U+00E8 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,967,"<!ENTITY eacute CDATA ""&#233;"" -- latin small letter e with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,968,                                  U+00E9 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,969,"<!ENTITY ecirc  CDATA ""&#234;"" -- latin small letter e with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,970,                                  U+00EA ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,971,"<!ENTITY euml   CDATA ""&#235;"" -- latin small letter e with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,972,                                  U+00EB ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,973,"<!ENTITY igrave CDATA ""&#236;"" -- latin small letter i with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,974,                                  U+00EC ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,975,"<!ENTITY iacute CDATA ""&#237;"" -- latin small letter i with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,976,                                  U+00ED ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,977,"<!ENTITY icirc  CDATA ""&#238;"" -- latin small letter i with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,978,                                  U+00EE ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,979,"<!ENTITY iuml   CDATA ""&#239;"" -- latin small letter i with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,980,                                  U+00EF ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,981,"<!ENTITY eth    CDATA ""&#240;"" -- latin small letter eth, U+00F0 ISOlat1 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,982,"<!ENTITY ntilde CDATA ""&#241;"" -- latin small letter n with tilde,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,983,                                  U+00F1 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,984,"<!ENTITY ograve CDATA ""&#242;"" -- latin small letter o with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,985,                                  U+00F2 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,986,"<!ENTITY oacute CDATA ""&#243;"" -- latin small letter o with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,987,                                  U+00F3 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,988,"<!ENTITY ocirc  CDATA ""&#244;"" -- latin small letter o with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,989,                                  U+00F4 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,990,"<!ENTITY otilde CDATA ""&#245;"" -- latin small letter o with tilde,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,991,                                  U+00F5 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,992,"<!ENTITY ouml   CDATA ""&#246;"" -- latin small letter o with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,993,                                  U+00F6 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,994,"<!ENTITY divide CDATA ""&#247;"" -- division sign, U+00F7 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,995,"<!ENTITY oslash CDATA ""&#248;"" -- latin small letter o with stroke,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,996,"                                  = latin small letter o slash,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,997,                                  U+00F8 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,998,"<!ENTITY ugrave CDATA ""&#249;"" -- latin small letter u with grave,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,999,                                  U+00F9 ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1000,"<!ENTITY uacute CDATA ""&#250;"" -- latin small letter u with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1001,                                  U+00FA ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1002,"<!ENTITY ucirc  CDATA ""&#251;"" -- latin small letter u with circumflex,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1003,                                  U+00FB ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1004,"<!ENTITY uuml   CDATA ""&#252;"" -- latin small letter u with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1005,                                  U+00FC ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1006,"<!ENTITY yacute CDATA ""&#253;"" -- latin small letter y with acute,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1007,                                  U+00FD ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1008,"<!ENTITY thorn  CDATA ""&#254;"" -- latin small letter thorn,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1009,                                  U+00FE ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1010,"<!ENTITY yuml   CDATA ""&#255;"" -- latin small letter y with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1011,                                  U+00FF ISOlat1 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1012,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1013,"24.3 Character entity references for symbols, mathematical symbols, and Greek letters"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1014,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1015,"The character entity references in this section produce characters that may be represented by glyphs in the widely available Adobe Symbol font, including Greek characters, various bracketing symbols, and a selection of mathematical operators such as gradient, product, and summation symbols."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1016,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1017,"To support these entities, user agents may support full [ISO10646] or use other means. Display of glyphs for these characters may be obtained by being able to display the relevant [ISO10646] characters or by other means, such as internally mapping the listed entities, numeric character references, and characters to the appropriate position in some font that contains the requisite glyphs."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1018,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1019,"When to use Greek entities. This entity set contains all the letters used in modern Greek. However, it does not include Greek punctuation, precomposed accented characters nor the non-spacing accents (tonos, dialytika) required to compose them. There are no archaic letters, Coptic-unique letters, or precomposed letters for Polytonic Greek. The entities defined here are not intended for the representation of modern Greek text and would not be an efficient representation; rather, they are intended for occasional Greek letters used in technical and mathematical works."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1020,24.3.1 The list of characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1021,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1022,"<!-- Mathematical, Greek and Symbolic characters for HTML -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1023,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1024,<!-- Character entity set. Typical invocation:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1025,     <!ENTITY % HTMLsymbol PUBLIC
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1026,"       ""-//W3C//ENTITIES Symbols//EN//HTML"">"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1027,     %HTMLsymbol; -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1028,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1029,<!-- Portions (c) International Organization for Standardization 1986:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1030,     Permission to copy in any form is granted for use with
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1031,     conforming SGML systems and applications as defined in
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1032,"     ISO 8879, provided this notice is included in all copies."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1033,-->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1034,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1035,<!-- Relevant ISO entity set is given unless names are newly introduced.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1036,"     New names (i.e., not in ISO 8879 list) do not clash with any"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1037,     existing ISO 8879 entity names. ISO 10646 character numbers
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1038,"     are given for each character, in hex. CDATA values are decimal"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1039,     conversions of the ISO 10646 values and refer to the document
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1040,     character set. Names are ISO 10646 names.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1041,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1042,-->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1043,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1044,<!-- Latin Extended-B -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1045,"<!ENTITY fnof     CDATA ""&#402;"" -- latin small f with hook = function"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1046,"                                    = florin, U+0192 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1047,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1048,<!-- Greek -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1049,"<!ENTITY Alpha    CDATA ""&#913;"" -- greek capital letter alpha, U+0391 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1050,"<!ENTITY Beta     CDATA ""&#914;"" -- greek capital letter beta, U+0392 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1051,"<!ENTITY Gamma    CDATA ""&#915;"" -- greek capital letter gamma,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1052,                                    U+0393 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1053,"<!ENTITY Delta    CDATA ""&#916;"" -- greek capital letter delta,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1054,                                    U+0394 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1055,"<!ENTITY Epsilon  CDATA ""&#917;"" -- greek capital letter epsilon, U+0395 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1056,"<!ENTITY Zeta     CDATA ""&#918;"" -- greek capital letter zeta, U+0396 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1057,"<!ENTITY Eta      CDATA ""&#919;"" -- greek capital letter eta, U+0397 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1058,"<!ENTITY Theta    CDATA ""&#920;"" -- greek capital letter theta,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1059,                                    U+0398 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1060,"<!ENTITY Iota     CDATA ""&#921;"" -- greek capital letter iota, U+0399 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1061,"<!ENTITY Kappa    CDATA ""&#922;"" -- greek capital letter kappa, U+039A -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1062,"<!ENTITY Lambda   CDATA ""&#923;"" -- greek capital letter lambda,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1063,                                    U+039B ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1064,"<!ENTITY Mu       CDATA ""&#924;"" -- greek capital letter mu, U+039C -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1065,"<!ENTITY Nu       CDATA ""&#925;"" -- greek capital letter nu, U+039D -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1066,"<!ENTITY Xi       CDATA ""&#926;"" -- greek capital letter xi, U+039E ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1067,"<!ENTITY Omicron  CDATA ""&#927;"" -- greek capital letter omicron, U+039F -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1068,"<!ENTITY Pi       CDATA ""&#928;"" -- greek capital letter pi, U+03A0 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1069,"<!ENTITY Rho      CDATA ""&#929;"" -- greek capital letter rho, U+03A1 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1070,"<!-- there is no Sigmaf, and no U+03A2 character either -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1071,"<!ENTITY Sigma    CDATA ""&#931;"" -- greek capital letter sigma,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1072,                                    U+03A3 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1073,"<!ENTITY Tau      CDATA ""&#932;"" -- greek capital letter tau, U+03A4 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1074,"<!ENTITY Upsilon  CDATA ""&#933;"" -- greek capital letter upsilon,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1075,                                    U+03A5 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1076,"<!ENTITY Phi      CDATA ""&#934;"" -- greek capital letter phi,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1077,                                    U+03A6 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1078,"<!ENTITY Chi      CDATA ""&#935;"" -- greek capital letter chi, U+03A7 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1079,"<!ENTITY Psi      CDATA ""&#936;"" -- greek capital letter psi,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1080,                                    U+03A8 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1081,"<!ENTITY Omega    CDATA ""&#937;"" -- greek capital letter omega,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1082,                                    U+03A9 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1083,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1084,"<!ENTITY alpha    CDATA ""&#945;"" -- greek small letter alpha,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1085,                                    U+03B1 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1086,"<!ENTITY beta     CDATA ""&#946;"" -- greek small letter beta, U+03B2 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1087,"<!ENTITY gamma    CDATA ""&#947;"" -- greek small letter gamma,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1088,                                    U+03B3 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1089,"<!ENTITY delta    CDATA ""&#948;"" -- greek small letter delta,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1090,                                    U+03B4 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1091,"<!ENTITY epsilon  CDATA ""&#949;"" -- greek small letter epsilon,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1092,                                    U+03B5 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1093,"<!ENTITY zeta     CDATA ""&#950;"" -- greek small letter zeta, U+03B6 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1094,"<!ENTITY eta      CDATA ""&#951;"" -- greek small letter eta, U+03B7 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1095,"<!ENTITY theta    CDATA ""&#952;"" -- greek small letter theta,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1096,                                    U+03B8 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1097,"<!ENTITY iota     CDATA ""&#953;"" -- greek small letter iota, U+03B9 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1098,"<!ENTITY kappa    CDATA ""&#954;"" -- greek small letter kappa,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1099,                                    U+03BA ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1100,"<!ENTITY lambda   CDATA ""&#955;"" -- greek small letter lambda,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1101,                                    U+03BB ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1102,"<!ENTITY mu       CDATA ""&#956;"" -- greek small letter mu, U+03BC ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1103,"<!ENTITY nu       CDATA ""&#957;"" -- greek small letter nu, U+03BD ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1104,"<!ENTITY xi       CDATA ""&#958;"" -- greek small letter xi, U+03BE ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1105,"<!ENTITY omicron  CDATA ""&#959;"" -- greek small letter omicron, U+03BF NEW -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1106,"<!ENTITY pi       CDATA ""&#960;"" -- greek small letter pi, U+03C0 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1107,"<!ENTITY rho      CDATA ""&#961;"" -- greek small letter rho, U+03C1 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1108,"<!ENTITY sigmaf   CDATA ""&#962;"" -- greek small letter final sigma,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1109,                                    U+03C2 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1110,"<!ENTITY sigma    CDATA ""&#963;"" -- greek small letter sigma,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1111,                                    U+03C3 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1112,"<!ENTITY tau      CDATA ""&#964;"" -- greek small letter tau, U+03C4 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1113,"<!ENTITY upsilon  CDATA ""&#965;"" -- greek small letter upsilon,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1114,                                    U+03C5 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1115,"<!ENTITY phi      CDATA ""&#966;"" -- greek small letter phi, U+03C6 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1116,"<!ENTITY chi      CDATA ""&#967;"" -- greek small letter chi, U+03C7 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1117,"<!ENTITY psi      CDATA ""&#968;"" -- greek small letter psi, U+03C8 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1118,"<!ENTITY omega    CDATA ""&#969;"" -- greek small letter omega,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1119,                                    U+03C9 ISOgrk3 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1120,"<!ENTITY thetasym CDATA ""&#977;"" -- greek small letter theta symbol,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1121,                                    U+03D1 NEW -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1122,"<!ENTITY upsih    CDATA ""&#978;"" -- greek upsilon with hook symbol,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1123,                                    U+03D2 NEW -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1124,"<!ENTITY piv      CDATA ""&#982;"" -- greek pi symbol, U+03D6 ISOgrk3 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1125,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1126,<!-- General Punctuation -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1127,"<!ENTITY bull     CDATA ""&#8226;"" -- bullet = black small circle,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1128,                                     U+2022 ISOpub  -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1129,"<!-- bullet is NOT the same as bullet operator, U+2219 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1130,"<!ENTITY hellip   CDATA ""&#8230;"" -- horizontal ellipsis = three dot leader,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1131,                                     U+2026 ISOpub  -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1132,"<!ENTITY prime    CDATA ""&#8242;"" -- prime = minutes = feet, U+2032 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1133,"<!ENTITY Prime    CDATA ""&#8243;"" -- double prime = seconds = inches,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1134,                                     U+2033 ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1135,"<!ENTITY oline    CDATA ""&#8254;"" -- overline = spacing overscore,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1136,                                     U+203E NEW -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1137,"<!ENTITY frasl    CDATA ""&#8260;"" -- fraction slash, U+2044 NEW -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1138,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1139,<!-- Letterlike Symbols -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1140,"<!ENTITY weierp   CDATA ""&#8472;"" -- script capital P = power set"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1141,"                                     = Weierstrass p, U+2118 ISOamso -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1142,"<!ENTITY image    CDATA ""&#8465;"" -- blackletter capital I = imaginary part,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1143,                                     U+2111 ISOamso -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1144,"<!ENTITY real     CDATA ""&#8476;"" -- blackletter capital R = real part symbol,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1145,                                     U+211C ISOamso -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1146,"<!ENTITY trade    CDATA ""&#8482;"" -- trade mark sign, U+2122 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1147,"<!ENTITY alefsym  CDATA ""&#8501;"" -- alef symbol = first transfinite cardinal,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1148,                                     U+2135 NEW -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1149,"<!-- alef symbol is NOT the same as hebrew letter alef,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1150,     U+05D0 although the same glyph could be used to depict both characters -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1151,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1152,<!-- Arrows -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1153,"<!ENTITY larr     CDATA ""&#8592;"" -- leftwards arrow, U+2190 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1154,"<!ENTITY uarr     CDATA ""&#8593;"" -- upwards arrow, U+2191 ISOnum-->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1155,"<!ENTITY rarr     CDATA ""&#8594;"" -- rightwards arrow, U+2192 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1156,"<!ENTITY darr     CDATA ""&#8595;"" -- downwards arrow, U+2193 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1157,"<!ENTITY harr     CDATA ""&#8596;"" -- left right arrow, U+2194 ISOamsa -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1158,"<!ENTITY crarr    CDATA ""&#8629;"" -- downwards arrow with corner leftwards"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1159,"                                     = carriage return, U+21B5 NEW -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1160,"<!ENTITY lArr     CDATA ""&#8656;"" -- leftwards double arrow, U+21D0 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1161,<!-- ISO 10646 does not say that lArr is the same as the 'is implied by' arrow
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1162,    but also does not have any other character for that function. So ? lArr can
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1163,    be used for 'is implied by' as ISOtech suggests -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1164,"<!ENTITY uArr     CDATA ""&#8657;"" -- upwards double arrow, U+21D1 ISOamsa -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1165,"<!ENTITY rArr     CDATA ""&#8658;"" -- rightwards double arrow,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1166,                                     U+21D2 ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1167,<!-- ISO 10646 does not say this is the 'implies' character but does not have
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1168,     another character with this function so ?
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1169,     rArr can be used for 'implies' as ISOtech suggests -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1170,"<!ENTITY dArr     CDATA ""&#8659;"" -- downwards double arrow, U+21D3 ISOamsa -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1171,"<!ENTITY hArr     CDATA ""&#8660;"" -- left right double arrow,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1172,                                     U+21D4 ISOamsa -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1173,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1174,<!-- Mathematical Operators -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1175,"<!ENTITY forall   CDATA ""&#8704;"" -- for all, U+2200 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1176,"<!ENTITY part     CDATA ""&#8706;"" -- partial differential, U+2202 ISOtech  -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1177,"<!ENTITY exist    CDATA ""&#8707;"" -- there exists, U+2203 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1178,"<!ENTITY empty    CDATA ""&#8709;"" -- empty set = null set = diameter,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1179,                                     U+2205 ISOamso -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1180,"<!ENTITY nabla    CDATA ""&#8711;"" -- nabla = backward difference,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1181,                                     U+2207 ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1182,"<!ENTITY isin     CDATA ""&#8712;"" -- element of, U+2208 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1183,"<!ENTITY notin    CDATA ""&#8713;"" -- not an element of, U+2209 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1184,"<!ENTITY ni       CDATA ""&#8715;"" -- contains as member, U+220B ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1185,<!-- should there be a more memorable name than 'ni'? -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1186,"<!ENTITY prod     CDATA ""&#8719;"" -- n-ary product = product sign,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1187,                                     U+220F ISOamsb -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1188,<!-- prod is NOT the same character as U+03A0 'greek capital letter pi' though
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1189,     the same glyph might be used for both -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1190,"<!ENTITY sum      CDATA ""&#8721;"" -- n-ary sumation, U+2211 ISOamsb -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1191,<!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1192,     though the same glyph might be used for both -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1193,"<!ENTITY minus    CDATA ""&#8722;"" -- minus sign, U+2212 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1194,"<!ENTITY lowast   CDATA ""&#8727;"" -- asterisk operator, U+2217 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1195,"<!ENTITY radic    CDATA ""&#8730;"" -- square root = radical sign,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1196,                                     U+221A ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1197,"<!ENTITY prop     CDATA ""&#8733;"" -- proportional to, U+221D ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1198,"<!ENTITY infin    CDATA ""&#8734;"" -- infinity, U+221E ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1199,"<!ENTITY ang      CDATA ""&#8736;"" -- angle, U+2220 ISOamso -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1200,"<!ENTITY and      CDATA ""&#8743;"" -- logical and = wedge, U+2227 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1201,"<!ENTITY or       CDATA ""&#8744;"" -- logical or = vee, U+2228 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1202,"<!ENTITY cap      CDATA ""&#8745;"" -- intersection = cap, U+2229 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1203,"<!ENTITY cup      CDATA ""&#8746;"" -- union = cup, U+222A ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1204,"<!ENTITY int      CDATA ""&#8747;"" -- integral, U+222B ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1205,"<!ENTITY there4   CDATA ""&#8756;"" -- therefore, U+2234 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1206,"<!ENTITY sim      CDATA ""&#8764;"" -- tilde operator = varies with = similar to,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1207,                                     U+223C ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1208,"<!-- tilde operator is NOT the same character as the tilde, U+007E,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1209,     although the same glyph might be used to represent both  -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1210,"<!ENTITY cong     CDATA ""&#8773;"" -- approximately equal to, U+2245 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1211,"<!ENTITY asymp    CDATA ""&#8776;"" -- almost equal to = asymptotic to,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1212,                                     U+2248 ISOamsr -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1213,"<!ENTITY ne       CDATA ""&#8800;"" -- not equal to, U+2260 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1214,"<!ENTITY equiv    CDATA ""&#8801;"" -- identical to, U+2261 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1215,"<!ENTITY le       CDATA ""&#8804;"" -- less-than or equal to, U+2264 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1216,"<!ENTITY ge       CDATA ""&#8805;"" -- greater-than or equal to,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1217,                                     U+2265 ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1218,"<!ENTITY sub      CDATA ""&#8834;"" -- subset of, U+2282 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1219,"<!ENTITY sup      CDATA ""&#8835;"" -- superset of, U+2283 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1220,"<!-- note that nsup, 'not a superset of, U+2283' is not covered by the Symbol"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1221,"     font encoding and is not included. Should it be, for symmetry?"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1222,     It is in ISOamsn  -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1223,"<!ENTITY nsub     CDATA ""&#8836;"" -- not a subset of, U+2284 ISOamsn -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1224,"<!ENTITY sube     CDATA ""&#8838;"" -- subset of or equal to, U+2286 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1225,"<!ENTITY supe     CDATA ""&#8839;"" -- superset of or equal to,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1226,                                     U+2287 ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1227,"<!ENTITY oplus    CDATA ""&#8853;"" -- circled plus = direct sum,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1228,                                     U+2295 ISOamsb -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1229,"<!ENTITY otimes   CDATA ""&#8855;"" -- circled times = vector product,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1230,                                     U+2297 ISOamsb -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1231,"<!ENTITY perp     CDATA ""&#8869;"" -- up tack = orthogonal to = perpendicular,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1232,                                     U+22A5 ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1233,"<!ENTITY sdot     CDATA ""&#8901;"" -- dot operator, U+22C5 ISOamsb -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1234,<!-- dot operator is NOT the same character as U+00B7 middle dot -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1235,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1236,<!-- Miscellaneous Technical -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1237,"<!ENTITY lceil    CDATA ""&#8968;"" -- left ceiling = apl upstile,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1238,                                     U+2308 ISOamsc  -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1239,"<!ENTITY rceil    CDATA ""&#8969;"" -- right ceiling, U+2309 ISOamsc  -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1240,"<!ENTITY lfloor   CDATA ""&#8970;"" -- left floor = apl downstile,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1241,                                     U+230A ISOamsc  -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1242,"<!ENTITY rfloor   CDATA ""&#8971;"" -- right floor, U+230B ISOamsc  -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1243,"<!ENTITY lang     CDATA ""&#9001;"" -- left-pointing angle bracket = bra,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1244,                                     U+2329 ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1245,<!-- lang is NOT the same character as U+003C 'less than'
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1246,     or U+2039 'single left-pointing angle quotation mark' -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1247,"<!ENTITY rang     CDATA ""&#9002;"" -- right-pointing angle bracket = ket,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1248,                                     U+232A ISOtech -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1249,<!-- rang is NOT the same character as U+003E 'greater than'
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1250,     or U+203A 'single right-pointing angle quotation mark' -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1251,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1252,<!-- Geometric Shapes -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1253,"<!ENTITY loz      CDATA ""&#9674;"" -- lozenge, U+25CA ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1254,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1255,<!-- Miscellaneous Symbols -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1256,"<!ENTITY spades   CDATA ""&#9824;"" -- black spade suit, U+2660 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1257,<!-- black here seems to mean filled as opposed to hollow -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1258,"<!ENTITY clubs    CDATA ""&#9827;"" -- black club suit = shamrock,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1259,                                     U+2663 ISOpub -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1260,"<!ENTITY hearts   CDATA ""&#9829;"" -- black heart suit = valentine,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1261,                                     U+2665 ISOpub -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1262,"<!ENTITY diams    CDATA ""&#9830;"" -- black diamond suit, U+2666 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1263,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1264,24.4 Character entity references for markup-significant and internationalization characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1265,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1266,"The character entity references in this section are for escaping markup-significant characters (these are the same as those in HTML 2.0 and 3.2), for denoting spaces and dashes. Other characters in this section apply to internationalization issues such as the disambiguation of bidirectional text (see the section on bidirectional text for details)."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1267,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1268,Entities have also been added for the remaining characters occurring in CP-1252 which do not occur in the HTMLlat1 or HTMLsymbol entity sets. These all occur in the 128 to 159 range within the CP-1252 charset. These entities permit the characters to be denoted in a platform-independent manner.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1269,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1270,"To support these entities, user agents may support full [ISO10646] or use other means. Display of glyphs for these characters may be obtained by being able to display the relevant [ISO10646] characters or by other means, such as internally mapping the listed entities, numeric character references, and characters to the appropriate position in some font that contains the requisite glyphs."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1271,24.4.1 The list of characters
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1272,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1273,<!-- Special characters for HTML -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1274,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1275,<!-- Character entity set. Typical invocation:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1276,     <!ENTITY % HTMLspecial PUBLIC
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1277,"       ""-//W3C//ENTITIES Special//EN//HTML"">"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1278,     %HTMLspecial; -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1279,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1280,<!-- Portions (c) International Organization for Standardization 1986:
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1281,     Permission to copy in any form is granted for use with
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1282,     conforming SGML systems and applications as defined in
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1283,"     ISO 8879, provided this notice is included in all copies."
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1284,-->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1285,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1286,<!-- Relevant ISO entity set is given unless names are newly introduced.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1287,"     New names (i.e., not in ISO 8879 list) do not clash with any"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1288,     existing ISO 8879 entity names. ISO 10646 character numbers
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1289,"     are given for each character, in hex. CDATA values are decimal"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1290,     conversions of the ISO 10646 values and refer to the document
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1291,     character set. Names are ISO 10646 names.
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1292,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1293,-->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1294,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1295,<!-- C0 Controls and Basic Latin -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1296,"<!ENTITY quot    CDATA ""&#34;""   -- quotation mark = APL quote,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1297,                                    U+0022 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1298,"<!ENTITY amp     CDATA ""&#38;""   -- ampersand, U+0026 ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1299,"<!ENTITY lt      CDATA ""&#60;""   -- less-than sign, U+003C ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1300,"<!ENTITY gt      CDATA ""&#62;""   -- greater-than sign, U+003E ISOnum -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1301,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1302,<!-- Latin Extended-A -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1303,"<!ENTITY OElig   CDATA ""&#338;""  -- latin capital ligature OE,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1304,                                    U+0152 ISOlat2 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1305,"<!ENTITY oelig   CDATA ""&#339;""  -- latin small ligature oe, U+0153 ISOlat2 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1306,"<!-- ligature is a misnomer, this is a separate character in some languages -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1307,"<!ENTITY Scaron  CDATA ""&#352;""  -- latin capital letter S with caron,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1308,                                    U+0160 ISOlat2 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1309,"<!ENTITY scaron  CDATA ""&#353;""  -- latin small letter s with caron,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1310,                                    U+0161 ISOlat2 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1311,"<!ENTITY Yuml    CDATA ""&#376;""  -- latin capital letter Y with diaeresis,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1312,                                    U+0178 ISOlat2 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1313,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1314,<!-- Spacing Modifier Letters -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1315,"<!ENTITY circ    CDATA ""&#710;""  -- modifier letter circumflex accent,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1316,                                    U+02C6 ISOpub -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1317,"<!ENTITY tilde   CDATA ""&#732;""  -- small tilde, U+02DC ISOdia -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1318,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1319,<!-- General Punctuation -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1320,"<!ENTITY ensp    CDATA ""&#8194;"" -- en space, U+2002 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1321,"<!ENTITY emsp    CDATA ""&#8195;"" -- em space, U+2003 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1322,"<!ENTITY thinsp  CDATA ""&#8201;"" -- thin space, U+2009 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1323,"<!ENTITY zwnj    CDATA ""&#8204;"" -- zero width non-joiner,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1324,                                    U+200C NEW RFC 2070 -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1325,"<!ENTITY zwj     CDATA ""&#8205;"" -- zero width joiner, U+200D NEW RFC 2070 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1326,"<!ENTITY lrm     CDATA ""&#8206;"" -- left-to-right mark, U+200E NEW RFC 2070 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1327,"<!ENTITY rlm     CDATA ""&#8207;"" -- right-to-left mark, U+200F NEW RFC 2070 -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1328,"<!ENTITY ndash   CDATA ""&#8211;"" -- en dash, U+2013 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1329,"<!ENTITY mdash   CDATA ""&#8212;"" -- em dash, U+2014 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1330,"<!ENTITY lsquo   CDATA ""&#8216;"" -- left single quotation mark,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1331,                                    U+2018 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1332,"<!ENTITY rsquo   CDATA ""&#8217;"" -- right single quotation mark,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1333,                                    U+2019 ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1334,"<!ENTITY sbquo   CDATA ""&#8218;"" -- single low-9 quotation mark, U+201A NEW -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1335,"<!ENTITY ldquo   CDATA ""&#8220;"" -- left double quotation mark,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1336,                                    U+201C ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1337,"<!ENTITY rdquo   CDATA ""&#8221;"" -- right double quotation mark,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1338,                                    U+201D ISOnum -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1339,"<!ENTITY bdquo   CDATA ""&#8222;"" -- double low-9 quotation mark, U+201E NEW -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1340,"<!ENTITY dagger  CDATA ""&#8224;"" -- dagger, U+2020 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1341,"<!ENTITY Dagger  CDATA ""&#8225;"" -- double dagger, U+2021 ISOpub -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1342,"<!ENTITY permil  CDATA ""&#8240;"" -- per mille sign, U+2030 ISOtech -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1343,"<!ENTITY lsaquo  CDATA ""&#8249;"" -- single left-pointing angle quotation mark,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1344,                                    U+2039 ISO proposed -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1345,<!-- lsaquo is proposed but not yet ISO standardized -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1346,"<!ENTITY rsaquo  CDATA ""&#8250;"" -- single right-pointing angle quotation mark,"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1347,                                    U+203A ISO proposed -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1348,<!-- rsaquo is proposed but not yet ISO standardized -->
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1349,"<!ENTITY euro   CDATA ""&#8364;""  -- euro sign, U+20AC NEW -->"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1350,""""""""
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1351,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1352,codes={}
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1353,for line in text.split('\n'):
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1354,  parts = line.split()
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1355,  if len(parts)<3 or parts[0]!='<!ENTITY' or parts[2]!='CDATA': continue
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1356,"  codes[parts[1]] = parts[3].strip('&#"";')"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1357,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1358,"print 'entityName={', ','.join([ '""'+key+'""' for key in codes]), '};'"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1359,"print 'entityVal={', ','.join([ str(codes[key]) for key in codes]), '};'"
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1360,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1361,
modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java,1362,********************** end htmlentity.py ********************/
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,34,import org.junit.Ignore;
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,44,"    String gold = "" this is some text  here is a  link  and "" +"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,45,"            ""another  link . "" +"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,46,"            ""This is an entity: & plus a <.  Here is an &.  "";"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,59,"    assertEquals(gold, builder.toString());"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,92,"    // System.out.println(""Resu: "" + result + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,93,"    // System.out.println(""Gold: "" + gold + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,94,"    assertTrue(result + "" is not equal to "" + gold + ""<EOS>"", result.equals(gold) == true);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,109,"    // System.out.println(""Resu: "" + result + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,110,"    // System.out.println(""Gold: "" + gold + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,111,"    assertTrue(result + "" is not equal to "" + gold + ""<EOS>"", result.equals(gold) == true);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,126,"    // System.out.println(""Resu: "" + result + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,127,"    // System.out.println(""Gold: "" + gold + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,128,"    assertTrue(result + "" is not equal to "" + gold, result.equals(gold) == true);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,150,"    String test = ""a <a hr<ef=aa<a>> </close</a>"";"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,151,"    String gold = ""a <a hr<ef=aa > </close "";"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,152,    Reader reader = new HTMLStripCharFilter(CharReader.get(new StringReader(test)));
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,153,    StringBuilder builder = new StringBuilder();
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,154,    int ch = 0;
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,155,    while ((ch = reader.read()) != -1){
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,156,      builder.append((char)ch);
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,158,    String result = builder.toString();
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,159,"    // System.out.println(""Resu: "" + result + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,160,"    // System.out.println(""Gold: "" + gold + ""<EOL>"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,161,"    assertTrue(result + "" is not equal to "" + gold + ""<EOS>"", result.equals(gold) == true);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,165,    StringBuilder testBuilder = new StringBuilder(HTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,167,"    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,172,"    appendChars(testBuilder, 3*HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,175,"    processBuffer(testBuilder.toString(), ""Failed w/ comment"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,179,"    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,181,"    processBuffer(testBuilder.toString(), ""Failed with proc. instr."");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,185,"    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,187,"    processBuffer(testBuilder.toString(), ""Failed on tag"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,188,
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,211,"    assertTrue(assertMsg + ""::: "" + builder.toString() + "" is not equal to "" + test, builder.toString().equals(test) == true);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,217,"    String gold = ""  "";"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,228,"    assertTrue(builder.toString() + "" is not equal to "" + gold + ""<EOS>"", builder.toString().equals(gold) == true);"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,250,"    doTestOffsets(""hello X how X are you"");"
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,257,
modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java,258,"  @Ignore(""broken offsets: see LUCENE-2208"")"
solr/core/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java,29," *     &lt;charFilter class=""solr.HTMLStripCharFilterFactory""/&gt;"
solr/core/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java,38,    return new HTMLStripCharFilter(input);
solr/core/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java,40,
solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java,329,"    assertEquals(""  whátëvêr  "", indexPart.get(""org.apache.lucene.analysis.charfilter.HTMLStripCharFilter""));"
solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest.java,330,"    assertEquals(""  whatever  "", indexPart.get(""org.apache.lucene.analysis.charfilter.MappingCharFilter""));"
lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/builders/QueryTreeBuilder.java,153,          Class<?>[] classes = node.getClass().getInterfaces();
